(window.webpackJsonp=window.webpackJsonp||[]).push([[194],{571:function(s,t,a){"use strict";a.r(t);var n=a(5),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"多表查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多表查询"}},[s._v("#")]),s._v(" 多表查询")]),s._v(" "),t("h2",{attrs:{id:"多表查询简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多表查询简介"}},[s._v("#")]),s._v(" 多表查询简介")]),s._v(" "),t("p",[s._v("表与表之间的关系有3种：①一对一；②一对多；③多对多。其中一对多和多对一实际上是一样的，只是角度不同而已。")]),s._v(" "),t("p",[s._v("在"),t("code",[s._v("MySQL")]),s._v("中，多表连接的方式主要有以下4种：")]),s._v(" "),t("ol",[t("li",[s._v("联合查询")]),s._v(" "),t("li",[s._v("内连接")]),s._v(" "),t("li",[s._v("外连接")]),s._v(" "),t("li",[s._v("笛卡尔积连接。")])]),s._v(" "),t("h2",{attrs:{id:"集合运算"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#集合运算"}},[s._v("#")]),s._v(" 集合运算")]),s._v(" "),t("p",[s._v("表的集合运算，跟数学中的集合运算是非常相似的。对于表的集合运算，主要包括以下3种:")]),s._v(" "),t("ol",[t("li",[s._v("并集（union）")]),s._v(" "),t("li",[s._v("交集（intersect）")]),s._v(" "),t("li",[s._v("差集（except）")])]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("提示")]),s._v(" "),t("p",[s._v("特别说明：对于"),t("code",[s._v("MySQL")]),s._v("来说，它只提供了实现并集的方式，并未提供可以直接获取交集和差集的方式。对于表的交集和差集，我们需要使用“曲线救国”的方式才能实现，也就是使用子查询方式来实现。不过在实际开发中，对表求交集和差集用得不多，我们简单了解一下即可。")])]),s._v(" "),t("h3",{attrs:{id:"并集-union"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#并集-union"}},[s._v("#")]),s._v(" 并集（union）")]),s._v(" "),t("p",[s._v("在"),t("code",[s._v("MySQL")]),s._v("中，我们可以使用"),t("code",[s._v("union")]),s._v("关键字来对两个表求并集。求两个表的并集，也就是对两个表进行加法运算。这种求并集的操作，也叫做“联合查询”。")]),s._v(" "),t("p",[s._v("联合查询可以分为以下几种类型：")]),s._v(" "),t("ol",[t("li",[t("strong",[s._v("UNION")]),s._v(": 合并结果集并去除重复的行。")]),s._v(" "),t("li",[t("strong",[s._v("UNION ALL")]),s._v(": 合并结果集但保留所有行，包括重复的行。")])]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- UNION")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" column1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" column2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" table1\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UNION")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" column1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" column2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" table2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- UNION ALL")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" column1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" column2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" table1\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UNION")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALL")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" column1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" column2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" table2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[s._v("注意")]),s._v(" "),t("ol",[t("li",[t("strong",[s._v("列数和数据类型")]),s._v(":\n"),t("ul",[t("li",[s._v("所有参与联合查询的 "),t("code",[s._v("SELECT")]),s._v(" 语句必须返回相同数量的列。")]),s._v(" "),t("li",[s._v("对应位置的列的数据类型必须兼容。")])])]),s._v(" "),t("li",[t("strong",[s._v("列名")]),s._v(":\n"),t("ul",[t("li",[s._v("结果集的列名默认取自第一个 "),t("code",[s._v("SELECT")]),s._v(" 语句中的列名。")]),s._v(" "),t("li",[s._v("可以使用别名来指定结果集的列名。")])])]),s._v(" "),t("li",[t("strong",[s._v("排序")]),s._v(":\n"),t("ul",[t("li",[t("code",[s._v("ORDER BY")]),s._v(" 子句只能放在最后一个 "),t("code",[s._v("SELECT")]),s._v(" 语句之后。")])])]),s._v(" "),t("li",[t("strong",[s._v("LIMIT")]),s._v(":\n"),t("ul",[t("li",[s._v("如果需要限制总结果集的行数，可以在最后一个 "),t("code",[s._v("SELECT")]),s._v(" 语句后使用 "),t("code",[s._v("LIMIT")]),s._v("。")])])])])]),s._v(" "),t("h4",{attrs:{id:"示例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[s._v("#")]),s._v(" 示例")]),s._v(" "),t("p",[s._v("假设我们有两个表 "),t("code",[s._v("students_2020")]),s._v(" 和 "),t("code",[s._v("students_2021")]),s._v("，每个表包含学生的学号、姓名和专业。我们希望将这两个表的数据合并在一起，并去除重复的学生记录。")]),s._v(" "),t("p",[t("strong",[s._v("创建示例表:")])]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 创建 students_2020 表")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" students_2020 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    sno "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("PRIMARY")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("KEY")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VARCHAR")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("50")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    major "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VARCHAR")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("50")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 创建 students_2021 表")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" students_2021 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    sno "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("PRIMARY")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("KEY")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VARCHAR")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("50")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    major "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VARCHAR")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("50")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 插入数据到 students_2020 表")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" students_2020 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sno"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" major"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Alice'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Computer Science'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Bob'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Mathematics'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 插入数据到 students_2021 表")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" students_2021 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sno"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" major"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Bob'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Mathematics'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Charlie'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Physics'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br")])]),t("p",[t("strong",[s._v("合并数据")]),s._v(":")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 使用 UNION 合并数据")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" sno"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" major\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" students_2020\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UNION")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" sno"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" major\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" students_2021"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 使用 UNION ALL 合并数据")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" sno"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" major\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" students_2020\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UNION")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALL")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" sno"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" major\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" students_2021"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("h3",{attrs:{id:"交集-intersect"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#交集-intersect"}},[s._v("#")]),s._v(" 交集（intersect）")]),s._v(" "),t("p",[s._v("其中一种方法是使用子查询来实现交集操作。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" students_2020\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" sno "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("IN")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" sno "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" students_2021"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h3",{attrs:{id:"差集-except"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#差集-except"}},[s._v("#")]),s._v(" 差集（except）")]),s._v(" "),t("p",[s._v("类似的，其中一种方法是使用子查询来实现交集操作。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" students_2020\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" sno "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("IN")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" sno "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" students_2021"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h2",{attrs:{id:"多表连接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多表连接"}},[s._v("#")]),s._v(" 多表连接")]),s._v(" "),t("p",[s._v("将两个表的通过指定字段进行关联。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" 列名\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" 表A\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" 表B\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" 表A"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("列名 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" 表B"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("列名"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("主要为内连接和外连接。")]),s._v(" "),t("p",[s._v("内连接类似于连接之后取交集，注意是连接之后再取交集，而不是直接取两个表的交集。")]),s._v(" "),t("p",[s._v("这是最常用的连接方式。它返回两个表中满足连接条件的所有行。只有当连接条件匹配时，才会出现在结果集中。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://s2.loli.net/2025/02/14/xUcgZRlj1TsIVXJ.png",alt:"image-20250214144009090"}})]),s._v(" "),t("p",[s._v("对于外连接来说，并不一定是连接之后求并集。只有完全外连接才是连接之后取并集。如果是左外连接或右外连接，则是根据左表或右表来显示一个表的所有行和另一个表中匹配行的结果。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://s2.loli.net/2025/02/14/Zp1o28g6v5SsLId.png",alt:"image-20250214144150998"}})]),s._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[s._v("注意")]),s._v(" "),t("p",[s._v("在实际开发中，我们应该清楚以下两点:")]),s._v(" "),t("ol",[t("li",[s._v("对于多表连接来说，最常用的是内连接，外连接用得比较少。")]),s._v(" "),t("li",[s._v("如果使用外连接，一般只会用到左外连接，个别情况会用到完全外连接。")])])]),s._v(" "),t("h2",{attrs:{id:"内连接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#内连接"}},[s._v("#")]),s._v(" 内连接")]),s._v(" "),t("p",[s._v("对于表的集合运算来说，它本质上是以“行”为单位进行操作的。而对于表的连接运算（包括内连接和外连接），则是以“列”为单位进行操作的。")]),s._v(" "),t("p",[s._v("在"),t("code",[s._v("MySQL")]),s._v("中，我们可以使用"),t("code",[s._v("inner join")]),s._v("关键字来实现内连接。所谓的内连接，指的是多个表通过“共享列”来进行连接。")]),s._v(" "),t("blockquote",[t("p",[s._v("获取两表中匹配的记录，仅交集")])]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" 列名\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" 表A\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("inner")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" 表B\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" 表A"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("列名 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" 表B"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("列名"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("h3",{attrs:{id:"示例-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#示例-2"}},[s._v("#")]),s._v(" 示例")]),s._v(" "),t("p",[s._v("通过"),t("code",[s._v("inner join")]),s._v(" 实现交集查询：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" s1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sno"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" s1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" s1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("major\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" students_2020 s1\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INNER")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("JOIN")]),s._v(" students_2021 s2 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" s1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sno "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" s2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sno"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h3",{attrs:{id:"深入了解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#深入了解"}},[s._v("#")]),s._v(" 深入了解")]),s._v(" "),t("h4",{attrs:{id:"单表查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#单表查询"}},[s._v("#")]),s._v(" 单表查询")]),s._v(" "),t("p",[s._v("对于单表查询来说，列名前面的表名前缀是可以省略的，也就是“表名.列名”可以直接写成“列名”。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 简写方式")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" sno"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" major\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" students_2020"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 完整写法")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" students_2020"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sno"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" students_2020"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" students_2020"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("major\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" students_2020"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 设置别名")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" s1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sno"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" s1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" s1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("major\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" students_2020 s1\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("h4",{attrs:{id:"using-列名"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#using-列名"}},[s._v("#")]),s._v(" using（列名）")]),s._v(" "),t("p",[s._v("下面两种方式是等价的，也就是"),t("code",[s._v("on staff.sid=market.sid")]),s._v("可以等价于"),t("code",[s._v("using(sid)")]),s._v("。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 方式1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" staff\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("inner")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" market\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" staff"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sid "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" market"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sid"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 方式2")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" staff\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("inner")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" market\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("using")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sid"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("h4",{attrs:{id:"连接多个表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#连接多个表"}},[s._v("#")]),s._v(" 连接多个表")]),s._v(" "),t("p",[s._v("在"),t("code",[s._v("MySQL")]),s._v("中，内连接（inner join）不仅可以连接两个表，还可以同时连接多个表（3个或3个以上）。如果想要连接多个表，我们只需要多次使用 "),t("code",[s._v("inner join…on…")]),s._v(" 即可。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" 列名\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" 表A\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("inner")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" 表B "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" 连接条件\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("inner")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" 表C "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" 连接条件\n……\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("h4",{attrs:{id:"查询条件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查询条件"}},[s._v("#")]),s._v(" 查询条件")]),s._v(" "),t("p",[s._v("对于内连接的查询条件，我们并不一定要使用“=”。除了等值连接，我们还可以使用非等值连接。所谓的非等值连接，指的是on子句使用的是除了等号（=）的其他比较运算符（如>、>=、<、<=、<>等）进行的连接。比如：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[s._v("staff"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sid "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<>")]),s._v(" market"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sid\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"外连接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#外连接"}},[s._v("#")]),s._v(" 外连接")]),s._v(" "),t("p",[s._v("用于从两个或多个表中检索数据，即使某些表中没有匹配的记录。")]),s._v(" "),t("p",[s._v("在"),t("code",[s._v("MySQL")]),s._v("中，根据连接时要提取的是哪个表的全部记录，外连接可以分为以下3种类型:")]),s._v(" "),t("ol",[t("li",[s._v("左外连接：根据左表来提取结果。")]),s._v(" "),t("li",[s._v("右外连接：根据右表来提取结果。")]),s._v(" "),t("li",[s._v("完全外连接：同时对左表和右表提取结果。")])]),s._v(" "),t("h3",{attrs:{id:"左外连接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#左外连接"}},[s._v("#")]),s._v(" 左外连接")]),s._v(" "),t("blockquote",[t("p",[s._v("获取左表所有记录 + 右表匹配记录，左侧全部保留")])]),s._v(" "),t("p",[s._v("左外连接，指的是根据“左表”来获取结果。在"),t("code",[s._v("MySQL")]),s._v("中，我们可以使用"),t("code",[s._v("left outer join")]),s._v("来实现左外连接。")]),s._v(" "),t("p",[s._v("返回左表中的所有记录，以及右表中与左表匹配的记录。如果右表中没有匹配的记录，则结果集中右表的列将包含 "),t("code",[s._v("NULL")]),s._v(" 值。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" 列名\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" 表A\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("left")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("outer")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" 表B\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" 表A"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("列名 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" 表B"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("列名"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("h3",{attrs:{id:"右外连接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#右外连接"}},[s._v("#")]),s._v(" 右外连接")]),s._v(" "),t("blockquote",[t("p",[s._v("获取右表所有记录 + 左表匹配记录，右侧全部保留")])]),s._v(" "),t("p",[s._v("右外连接，指的是根据“右表”来获取结果。在"),t("code",[s._v("MySQL")]),s._v("中，我们可以使用"),t("code",[s._v("right outer join")]),s._v("来实现右外连接。")]),s._v(" "),t("p",[s._v("返回右表中的所有记录，以及左表中与右表匹配的记录。如果左表中没有匹配的记录，则结果集中左表的列将包含 "),t("code",[s._v("NULL")]),s._v(" 值。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" 列名\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" 表A\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("right")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("outer")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" 表B\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" 表A"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("列名 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" 表B"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("列名"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("h3",{attrs:{id:"完全外连接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#完全外连接"}},[s._v("#")]),s._v(" 完全外连接")]),s._v(" "),t("blockquote",[t("p",[s._v("获取左右表所有记录，需要通过 "),t("code",[s._v("UNION")]),s._v(" 实现")])]),s._v(" "),t("p",[s._v("像"),t("code",[s._v("SQL Server")]),s._v("等"),t("code",[s._v("DBMS")]),s._v("中，我们可以使用"),t("code",[s._v("full outer join")]),s._v("来实现完全外连接。所谓完全外连接，指的是连接之后同时保留左表和右表的所有记录，它相当于左外连接和右外连接的并集。")]),s._v(" "),t("p",[s._v("不过"),t("code",[s._v("MySQL")]),s._v("并没有提供"),t("code",[s._v("full outer join")]),s._v("这样的方式，如果想要在"),t("code",[s._v("MySQL")]),s._v("中实现完全外连接，我们可以使用一种“曲线救国”的方式：首先获取左外连接的结果，然后获取右外连接的结果，最后使用"),t("code",[s._v("union")]),s._v("求并集即可。")]),s._v(" "),t("h3",{attrs:{id:"示例-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#示例-3"}},[s._v("#")]),s._v(" 示例")]),s._v(" "),t("p",[s._v("假设我们有两个表 "),t("code",[s._v("students_2020")]),s._v(" 和 "),t("code",[s._v("students_2021")]),s._v("，我们希望找到在这两个表中存在的所有学生记录，包括只在一个表中存在的记录。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" s1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sno"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" s1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" name_2020"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" s1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("major "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" major_2020"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" s2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" name_2021"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" s2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("major "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" major_2021\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" students_2020 s1\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LEFT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("JOIN")]),s._v(" students_2021 s2 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" s1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sno "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" s2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sno\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UNION")]),s._v(" \n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" s2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sno"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" s1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" name_2020"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" s1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("major "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" major_2020"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" s2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" name_2021"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" s2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("major "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" major_2021\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" students_2020 s1\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RIGHT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("JOIN")]),s._v(" students_2021 s2 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" s1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sno "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" s2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sno"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("p",[t("img",{attrs:{src:"https://s2.loli.net/2025/02/13/QKBkqAOyCrJDvIs.png",alt:"image-20250213165532537"}})]),s._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[s._v("注意")]),s._v(" "),t("ol",[t("li",[t("strong",[s._v("列名处理")]),s._v("：由于 "),t("code",[s._v("UNION")]),s._v(" 要求每个 "),t("code",[s._v("SELECT")]),s._v(" 语句返回的列数和数据类型相同，因此需要为不同的列指定别名以避免冲突。")]),s._v(" "),t("li",[t("strong",[s._v("去重")]),s._v("："),t("code",[s._v("UNION")]),s._v(" 默认会去除重复的行。如果需要保留所有行（包括重复的），可以使用 "),t("code",[s._v("UNION ALL")]),s._v("。")])])]),s._v(" "),t("h2",{attrs:{id:"笛卡尔积连接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#笛卡尔积连接"}},[s._v("#")]),s._v(" 笛卡尔积连接")]),s._v(" "),t("p",[s._v("笛卡儿积连接，也叫做“交叉连接”，它指的是同时从多个表中查询数据，然后组合返回数据。笛卡儿积连接的特殊之处在于，如果它不使用"),t("code",[s._v("where")]),s._v("子句指定查询条件，那么它就返回多个表的全部记录。")]),s._v(" "),t("p",[s._v("在"),t("code",[s._v("MySQL")]),s._v("中，笛卡儿积连接有两种写法：一种是使用英文逗号（,）隔开，另一种是使用"),t("code",[s._v("cross join")]),s._v("关键字。下面两种写法是等价的。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" 列名\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" 表名"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" 表名"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" 列名\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" 表名"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("cross")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" 表名"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[t("strong",[s._v("示例：")])]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" students"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sno"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" students"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" students"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("major"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" courses"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("course_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" courses"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("course_name\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" students"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" courses"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h2",{attrs:{id:"自连接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自连接"}},[s._v("#")]),s._v(" 自连接")]),s._v(" "),t("p",[s._v("在"),t("code",[s._v("MySQL")]),s._v("中，还有一种很特殊的多表连接方式——自连接。在自连接时，连接的两张表是同一张表，然后我们一般需要通过起一个别名来进行区分。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" 列名\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" 表名"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" 别名"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" 表名"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" 别名"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);