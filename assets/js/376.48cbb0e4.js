(window.webpackJsonp=window.webpackJsonp||[]).push([[376],{751:function(s,t,a){"use strict";a.r(t);var e=a(5),n=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"前言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[s._v("#")]),s._v(" 前言")]),s._v(" "),t("p",[s._v("上节我们讲 Docker Compose 的时候，涉及到多个 docker 容器的通信，我们是通过指定宿主机 ip 和端口的方式。")]),s._v(" "),t("p",[s._v("因为 mysql、redis 的 Docker 容器都映射到了宿主机的端口，那 nest 的容器就可以通过宿主机来实现和其他容器的通信。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://s2.loli.net/2025/10/15/BWpoumbEqCNDvsc.png",alt:""}})]),s._v(" "),t("p",[s._v("Docker 的实现原理那节我们讲过，Docker 通过 Namespace 的机制实现了容器的隔离，其中就包括 Network Namespace。")]),s._v(" "),t("p",[s._v("因为每个容器都有独立的 Network Namespace，所以不能直接通过端口访问其他容器的服务。")]),s._v(" "),t("p",[s._v("那如果这个 Network Namespace 不只包括一个 Docker 容器呢？？")]),s._v(" "),t("p",[s._v("可以创建一个 Network Namespace，然后设置到多个 Docker 容器，这样这些容器就在一个 Namespace 下了，不就可以直接访问对应端口了？")]),s._v(" "),t("p",[s._v("Docker 确实支持这种方式，叫做桥接网络。")]),s._v(" "),t("h2",{attrs:{id:"通过-docker-network-来创建"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#通过-docker-network-来创建"}},[s._v("#")]),s._v(" 通过 docker network 来创建：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("docker network create common-network\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("img",{attrs:{src:"https://s2.loli.net/2025/10/15/i6ZpszEYCng91r4.png",alt:""}})]),s._v(" "),t("h2",{attrs:{id:"然后把之前的-3-个容器停掉、删除-我们重新跑"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#然后把之前的-3-个容器停掉、删除-我们重新跑"}},[s._v("#")]),s._v(" 然后把之前的 3 个容器停掉、删除，我们重新跑：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("docker stop mysql-container redis-container nest-container\ndocker rm mysql-container redis-container nest-container\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[t("img",{attrs:{src:"https://s2.loli.net/2025/10/15/kZ2U1HMIzS9Nnvm.png",alt:""}})]),s._v(" "),t("h3",{attrs:{id:"跑-mysql-容器-跑的时候要指定-network"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#跑-mysql-容器-跑的时候要指定-network"}},[s._v("#")]),s._v(" 跑 mysql 容器，跑的时候要指定 --network：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("docker run -d --network common-network -v /Users/guang/mysql-data:/var/lib/mysql --name mysql-container mysql\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("通过 --network 指定桥接网络为我们刚创建的 common-network。")]),s._v(" "),t("p",[s._v("不需要指定和宿主机的端口映射。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://s2.loli.net/2025/10/15/QZ4YkIO6x5oKrgq.png",alt:"image.png"}})]),s._v(" "),t("h3",{attrs:{id:"然后跑-redis-容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#然后跑-redis-容器"}},[s._v("#")]),s._v(" 然后跑 redis 容器：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("docker run -d --network common-network -v /Users/guang/aaa:/data --name redis-container redis\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("同样也不需要指定和宿主机的端口映射，只需要指定挂载的数据卷就行：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://s2.loli.net/2025/10/15/g5QWZjhVvHNX28T.png",alt:""}})]),s._v(" "),t("h3",{attrs:{id:"然后-nest-的部分我们要改下代码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#然后-nest-的部分我们要改下代码"}},[s._v("#")]),s._v(" 然后 nest 的部分我们要改下代码：")]),s._v(" "),t("p",[s._v("修改 AppModule 的代码，改成用容器名来访问：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://s2.loli.net/2025/10/15/QFIBGoVOkZJyWdN.png",alt:""}})]),s._v(" "),t("h3",{attrs:{id:"然后-docker-build"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#然后-docker-build"}},[s._v("#")]),s._v(" 然后 docker build：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("docker build -t mmm .\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("img",{attrs:{src:"https://s2.loli.net/2025/10/15/9eBzI7gxZQdniJP.png",alt:""}})]),s._v(" "),t("h3",{attrs:{id:"之后-docker-run"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#之后-docker-run"}},[s._v("#")]),s._v(" 之后 docker run：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("docker run -d --network common-network -p 3000:3000 --name nest-container mmm\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("nest 容器是要指定和宿主机的端口映射的，因为宿主机要访问这个端口的网页。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://s2.loli.net/2025/10/15/M13Evx89hokXLda.png",alt:""}})]),s._v(" "),t("p",[s._v("然后 docker logs 看下日志：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("docker logs nest-container\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("可以看到打印了 sql 语句，说明 mysql 连接成功了：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/da2df480dfd543eb8e082d1e196c3c82~tplv-k3u1fbpfcp-watermark.image?",alt:""}})]),s._v(" "),t("p",[s._v("浏览器访问 http://localhost:3000")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://s2.loli.net/2025/10/15/na2U8NxAM1dRfgv.png",alt:""}})]),s._v(" "),t("p",[s._v("然后再看下日志：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("docker logs nest-container\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("img",{attrs:{src:"https://s2.loli.net/2025/10/15/4ePuVhEiHaQr9dS.png",alt:""}})]),s._v(" "),t("p",[s._v("打印了 redis 的 key 说明 redis 服务也连接成功了。")]),s._v(" "),t("h3",{attrs:{id:"这就是桥接网络。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#这就是桥接网络。"}},[s._v("#")]),s._v(" 这就是桥接网络。")]),s._v(" "),t("p",[s._v("之前我们是通过宿主机 ip 来互相访问的：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://s2.loli.net/2025/10/15/BWpoumbEqCNDvsc.png",alt:""}})]),s._v(" "),t("p",[s._v("现在可以通过容器名直接互相访问了：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://s2.loli.net/2025/10/15/YmtR4jyqK1W8CE3.png",alt:""}})]),s._v(" "),t("p",[s._v("原理前面讲过，就是 Namespace。")]),s._v(" "),t("p",[s._v("本来是 3 个独立的 Network Namespace：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://s2.loli.net/2025/10/15/aNx2Jmw5uon6qOR.png",alt:""}})]),s._v(" "),t("p",[s._v("桥接之后就这样了：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://s2.loli.net/2025/10/15/DWy8FrbXBMHYQoT.png",alt:""}})]),s._v(" "),t("p",[s._v("Namespace 下包含多个子 Namespace，互相能通过容器名访问。")]),s._v(" "),t("p",[s._v("比起端口映射到宿主机，再访问宿主机 ip 的方式，简便太多了。")]),s._v(" "),t("h2",{attrs:{id:"那在-docker-compose-里怎么使用这种方式呢"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#那在-docker-compose-里怎么使用这种方式呢"}},[s._v("#")]),s._v(" 那在 Docker Compose 里怎么使用这种方式呢？")]),s._v(" "),t("h3",{attrs:{id:"之前我们是这样写的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#之前我们是这样写的"}},[s._v("#")]),s._v(" 之前我们是这样写的：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://s2.loli.net/2025/10/15/5kFZioIGnUXBqSN.png",alt:""}})]),s._v(" "),t("h3",{attrs:{id:"现在改成这样"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#现在改成这样"}},[s._v("#")]),s._v(" 现在改成这样：")]),s._v(" "),t("div",{staticClass:"language-yml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'3.8'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("services")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("nest-app")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("build")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("context")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ./\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("dockerfile")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ./Dockerfile\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("depends_on")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" mysql"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("container\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" redis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("container\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'3000:3000'")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("networks")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" common"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("network\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("mysql-container")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" mysql\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" /Users/guang/mysql"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("data"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/var/lib/mysql\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("environment")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("MYSQL_DATABASE")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" aaa\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("MYSQL_ROOT_PASSWORD")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" guang\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("networks")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" common"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("network\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("redis-container")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" redis\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" /Users/guang/aaa"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/data\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("networks")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" common"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("network\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("networks")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("common-network")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("driver")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" bridge\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br")])]),t("p",[s._v("version 是指定 docker-compose.yml 的版本，因为不同版本配置不同。")]),s._v(" "),t("p",[s._v("把 mysql-container、redis-container 的 ports 映射去掉，指定桥接网络为 common-network。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://s2.loli.net/2025/10/15/GfbeUdi3lu4HQt7.png",alt:""}})]),s._v(" "),t("p",[s._v("然后下面通过 networks 指定创建的 common-network 桥接网络，网络驱动程序指定为 bridge。")]),s._v(" "),t("p",[s._v("其实我们一直用的网络驱动程序都是 bridge，它的含义是容器的网络和宿主机网络是隔离开的，但是可以做端口映射。比如 -p 3000:3000、-p 3306:3306 这样。")]),s._v(" "),t("h3",{attrs:{id:"然后执行"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#然后执行"}},[s._v("#")]),s._v(" 然后执行：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("docker-compose down --rmi all\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("就会删除 3 个容器和它们的镜像：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://s2.loli.net/2025/10/15/uv4wiVJsO7aAmMK.png",alt:""}})]),s._v(" "),t("p",[s._v("之后再")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("docker-compose up\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("img",{attrs:{src:"https://s2.loli.net/2025/10/15/TsKNyH6mc2PzeW7.png",alt:""}})]),s._v(" "),t("p",[s._v("可以看到，会先 build dockerfile 产生镜像，然后把 3 个镜像跑起来。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://s2.loli.net/2025/10/15/7m2ae1xBgHSn6lT.png",alt:""}})]),s._v(" "),t("p",[s._v("看到打印的 sql 说明 mysql 服务连接成功了。")]),s._v(" "),t("p",[s._v("（这个过程可能因为 mysql 容器没跑起来而连接失败几次，等一会就好了）")]),s._v(" "),t("p",[s._v("浏览器访问下：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://s2.loli.net/2025/10/15/LBqQEluj7oIkYnw.png",alt:""}})]),s._v(" "),t("p",[s._v("也拿到了 redis 的 key，说明 redis 服务跑成功了：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://s2.loli.net/2025/10/15/WlSrOIyvBdwHzFY.png",alt:""}})]),s._v(" "),t("p",[s._v("这就是在 docker-compose 里使用桥接网络的方式。")]),s._v(" "),t("p",[s._v("不过，其实不指定 networks 也可以，docker-compose 会创建个默认的。")]),s._v(" "),t("p",[s._v("先把容器、镜像删掉：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("docker-compose down --rmi all\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("img",{attrs:{src:"https://s2.loli.net/2025/10/15/ihXlCNEJdfOAQgY.png",alt:""}})]),s._v(" "),t("p",[s._v("把 networks 部分注释掉，重新跑：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://s2.loli.net/2025/10/15/JQZzyHboPBslAIX.png",alt:""}})]),s._v(" "),t("p",[s._v("你会发现它创建了一个默认的 network：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://s2.loli.net/2025/10/15/KN2Yj3wh7Hzl5sF.png",alt:""}})]),s._v(" "),t("p",[s._v("mysql 和 redis 的访问都是正常的：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://s2.loli.net/2025/10/15/YulOVFSARCL5s3Q.png",alt:""}})]),s._v(" "),t("p",[s._v("所以，不手动指定 networks，也是可以用桥接网络的。")]),s._v(" "),t("p",[s._v("案例代码在"),t("a",{attrs:{href:"https://github.com/QuarkGluonPlasma/nestjs-course-code/tree/main/docker-compose-test",target:"_blank",rel:"noopener noreferrer"}},[s._v("小册仓库"),t("OutboundLink")],1),s._v("。")]),s._v(" "),t("h2",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),t("p",[s._v("上节我们是把 mysql、redis 的端口映射到宿主机，然后 nest 的容器里通过宿主机 ip 访问这两个服务的。")]),s._v(" "),t("p",[s._v("但其实有更方便的方式，就是桥接网络。")]),s._v(" "),t("p",[s._v("通过 docker network create 创建一个桥接网络，然后 docker run 的时候指定 --network，这样 3 个容器就可以通过容器名互相访问了。")]),s._v(" "),t("p",[s._v("在 docker-compose.yml 配置下 networks 创建桥接网络，然后添加到不同的 service 上即可。")]),s._v(" "),t("p",[s._v("或者不配置 networks，docker-compose 会生成一个默认的。")]),s._v(" "),t("p",[s._v("实现原理就是对 Network Namespace 的处理，本来是 3个独立的 Namespace，当指定了 network 桥接网络，就可以在 Namespace 下访问别的 Namespace 了。")]),s._v(" "),t("p",[s._v("多个容器之间的通信方式，用桥接网络是最简便的。")])])}),[],!1,null,null,null);t.default=n.exports}}]);