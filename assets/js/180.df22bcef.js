(window.webpackJsonp=window.webpackJsonp||[]).push([[180],{558:function(t,s,e){"use strict";e.r(s);var a=e(5),r=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("还不错的教程 "),s("a",{attrs:{href:"https://docker.easydoc.net/doc/81170005/cCewZWoN/lTKfePfP",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker 快速入门"),s("OutboundLink")],1),t._v("，查漏补缺推荐 "),s("a",{attrs:{href:"https://yeasy.gitbook.io/docker_practice/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker — 从入门到实践"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"docker-架构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-架构"}},[t._v("#")]),t._v(" Docker 架构")]),t._v(" "),s("p",[t._v("Docker 包括三个基本概念:")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("镜像（Image）")]),t._v("：Docker 镜像（Image），就相当于是一个 root 文件系统。比如官方镜像 ubuntu:16.04 就包含了完整的一套 Ubuntu16.04 最小系统的 root 文件系统。")]),t._v(" "),s("li",[s("strong",[t._v("容器（Container）")]),t._v("：镜像（Image）和容器（Container）的关系，就像是面向对象程序设计中的类和实例一样，镜像是静态的定义，容器是镜像运行时的实体。容器可以被创建、启动、停止、删除、暂停等。")]),t._v(" "),s("li",[s("strong",[t._v("仓库（Repository）")]),t._v("：仓库可看成一个代码控制中心，用来保存镜像。")])]),t._v(" "),s("p",[t._v("Docker 使用客户端-服务器 (C/S) 架构模式，使用远程API来管理和创建Docker容器。")]),t._v(" "),s("p",[t._v("Docker 容器通过 Docker 镜像来创建。")]),t._v(" "),s("p",[t._v("容器与镜像的关系类似于面向对象编程中的对象与类。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("Docker")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("面向对象")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("容器(软件安装后的状态，每个软件运行环境都是独立的、隔离的，称之为容器)")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("对象")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("镜像(可以理解为软件安装包，可以方便的进行传播和安装)")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("类")])])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://www.runoob.com/wp-content/uploads/2016/04/576507-docker1.png",alt:"img"}})]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("概念")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("Docker 镜像(Images)")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Docker 镜像是用于创建 Docker 容器的模板，比如 Ubuntu 系统。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("Docker 容器(Container)")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("容器是独立运行的一个或一组应用，是镜像运行时的实体。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("Docker 客户端(Client)")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Docker 客户端通过命令行或者其他工具使用 Docker SDK (https://docs.docker.com/develop/sdk/) 与 Docker 的守护进程通信。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("Docker 主机(Host)")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("一个物理或者虚拟的机器用于执行 Docker 守护进程和容器。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("Docker Registry")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Docker 仓库用来保存镜像，可以理解为代码控制中的代码仓库。Docker Hub("),s("a",{attrs:{href:"https://hub.docker.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://hub.docker.com"),s("OutboundLink")],1),t._v(") 提供了庞大的镜像集合供使用。一个 Docker Registry 中可以包含多个仓库（Repository）；每个仓库可以包含多个标签（Tag）；每个标签对应一个镜像。通常，一个仓库会包含同一个软件不同版本的镜像，而标签就常用于对应该软件的各个版本。我们可以通过 "),s("strong",[t._v("<仓库名>:<标签>")]),t._v(" 的格式来指定具体是这个软件哪个版本的镜像。如果不给出标签，将以 "),s("strong",[t._v("latest")]),t._v(" 作为默认标签。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("Docker Machine")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Docker Machine是一个简化Docker安装的命令行工具，通过一个简单的命令行即可在相应的平台上安装Docker，比如VirtualBox、 Digital Ocean、Microsoft Azure。")])])])]),t._v(" "),s("h3",{attrs:{id:"docker-资源"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-资源"}},[t._v("#")]),t._v(" Docker 资源")]),t._v(" "),s("ul",[s("li",[t._v("Docker 官方主页: "),s("a",{attrs:{href:"https://www.docker.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.docker.com"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("Docker 官方博客: https://blog.docker.com/")]),t._v(" "),s("li",[t._v("Docker 官方文档: https://docs.docker.com/")]),t._v(" "),s("li",[t._v("Docker Store: "),s("a",{attrs:{href:"https://store.docker.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://store.docker.com"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("Docker Cloud: "),s("a",{attrs:{href:"https://cloud.docker.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://cloud.docker.com"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("Docker Hub: "),s("a",{attrs:{href:"https://hub.docker.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://hub.docker.com"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("Docker 的源代码仓库: https://github.com/moby/moby")]),t._v(" "),s("li",[t._v("Docker 发布版本历史: https://docs.docker.com/release-notes/")]),t._v(" "),s("li",[t._v("Docker 常见问题: https://docs.docker.com/engine/faq/")]),t._v(" "),s("li",[t._v("Docker 远端应用 API: https://docs.docker.com/develop/sdk/")])]),t._v(" "),s("h3",{attrs:{id:"镜像加速源"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#镜像加速源"}},[t._v("#")]),t._v(" 镜像加速源")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("镜像加速器")]),t._v(" "),s("th",[t._v("镜像加速器地址")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("Docker 中国官方镜像")]),t._v(" "),s("td",[t._v("https://registry.docker-cn.com")])]),t._v(" "),s("tr",[s("td",[t._v("DaoCloud 镜像站")]),t._v(" "),s("td",[t._v("http://f1361db2.m.daocloud.io")])]),t._v(" "),s("tr",[s("td",[t._v("Azure 中国镜像")]),t._v(" "),s("td",[t._v("https://dockerhub.azk8s.cn")])]),t._v(" "),s("tr",[s("td",[t._v("科大镜像站")]),t._v(" "),s("td",[t._v("https://docker.mirrors.ustc.edu.cn")])]),t._v(" "),s("tr",[s("td",[t._v("阿里云")]),t._v(" "),s("td",[t._v("https://ud6340vz.mirror.aliyuncs.com")])]),t._v(" "),s("tr",[s("td",[t._v("七牛云")]),t._v(" "),s("td",[t._v("https://reg-mirror.qiniu.com")])]),t._v(" "),s("tr",[s("td",[t._v("网易云")]),t._v(" "),s("td",[t._v("https://hub-mirror.c.163.com")])]),t._v(" "),s("tr",[s("td",[t._v("腾讯云")]),t._v(" "),s("td",[t._v("https://mirror.ccs.tencentyun.com")])])])]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('"registry-mirrors": ["https://registry.docker-cn.com"]\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[s("img",{attrs:{src:"https://sjwx.easydoc.xyz/46901064/files/l25jdwrn.png",alt:"1.png"}})]),t._v(" "),s("h2",{attrs:{id:"对镜像的基础操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对镜像的基础操作"}},[t._v("#")]),t._v(" 对镜像的基础操作")]),t._v(" "),s("h3",{attrs:{id:"获取当时所有镜像-docker-images"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#获取当时所有镜像-docker-images"}},[t._v("#")]),t._v(" 获取当时所有镜像(docker images)")]),t._v(" "),s("div",{staticClass:"language-powershell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[t._v("docker image "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 或者")]),t._v("\ndocker images\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("table",[s("thead",[s("tr",[s("th",[t._v("标签")]),t._v(" "),s("th",[t._v("含义")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("REPOSITORY")]),t._v(" "),s("td",[t._v("镜像所在的仓库名称")])]),t._v(" "),s("tr",[s("td",[t._v("TAG")]),t._v(" "),s("td",[t._v("镜像标签")])]),t._v(" "),s("tr",[s("td",[t._v("IMAGEID")]),t._v(" "),s("td",[t._v("镜像ID")])]),t._v(" "),s("tr",[s("td",[t._v("CREATED")]),t._v(" "),s("td",[t._v("镜像的创建日期(不是获取该镜像的日期)")])]),t._v(" "),s("tr",[s("td",[t._v("SIZE")]),t._v(" "),s("td",[t._v("镜像大小")])])])]),t._v(" "),s("h3",{attrs:{id:"拉取镜像-docker-pull"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#拉取镜像-docker-pull"}},[t._v("#")]),t._v(" 拉取镜像(docker pull)")]),t._v(" "),s("p",[t._v("除了使用官方的镜像外,我们还可以在仓库中申请一个自己的账号,保存自己制作的进行,或者拉去使用他人的镜像。")]),t._v(" "),s("div",{staticClass:"language-powershell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 官方镜像")]),t._v("\ndocker image pull 镜像名称 \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 或简写为 ")]),t._v("\ndocker pull 镜像名称\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 比如")]),t._v("\ndocker pull ubuntu\ndocker pull ubuntu:16"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("04\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 个人镜像")]),t._v("\ndocker pull 仓库名称"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("镜像名称\ndocker pull xunmi/django\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 第三方仓库拉去")]),t._v("\ndocker pull 第三方仓库地址"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("仓库名称"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("镜像名称\ndocker pull hub"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("163"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com/library/mysql:latest\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("默认仓库名为library"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("所有从官方获取镜像相当于`sudo docker image pull library/镜像名称`"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br")])]),s("h3",{attrs:{id:"删除镜像-docker-rmi"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除镜像-docker-rmi"}},[t._v("#")]),t._v(" 删除镜像(docker rmi)")]),t._v(" "),s("div",{staticClass:"language-powershell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[t._v("docker image "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" 镜像名或镜像ID 或 docker rmi 镜像名或镜像ID\ndocker image "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" hello-world\ndocker rmi 9e64176cd8a2\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("几条删除命令的区别")]),t._v(" "),s("ul",[s("li",[t._v("docker rm: 删除一个或多个 容器")]),t._v(" "),s("li",[t._v("docker rmi: 删除一个或多个 镜像")]),t._v(" "),s("li",[t._v("docker prune: 用来删除不再使用的 docker 对象")])]),t._v(" "),s("h3",{attrs:{id:"加载镜像-docker-run"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#加载镜像-docker-run"}},[t._v("#")]),t._v(" 加载镜像(docker run)")]),t._v(" "),s("p",[t._v("因为镜像只是一个只读类型的文件,而我们的环境不可能只是一个这样的文件,所以我们需要把这个镜像加载成我们的环境,也就是让他变成容器。")]),t._v(" "),s("div",{staticClass:"language-powershell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[t._v("docker run "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("可选参数"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 镜像名 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("向启动容器中传入的命令"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\t\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("table",[s("thead",[s("tr",[s("th",[t._v("常用可选参数")]),t._v(" "),s("th",[t._v("作用")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("-i")]),t._v(" "),s("td",[t._v("表示以《交互模式》运行容器。")])]),t._v(" "),s("tr",[s("td",[t._v("-d")]),t._v(" "),s("td",[t._v("会创建一个守护式容器在后台运行(这样创建容器后不会自动登录容器)。")])]),t._v(" "),s("tr",[s("td",[t._v("-t")]),t._v(" "),s("td",[t._v("表示容器启动后会进入其命令行。加入这两个参数后，容器创建就能登录进去。即分配一个伪终端。")])]),t._v(" "),s("tr",[s("td",[t._v("–name")]),t._v(" "),s("td",[t._v("为创建的容器命名。(默认会随机给名字,不支持中文字符!!!)")])]),t._v(" "),s("tr",[s("td",[t._v("-v")]),t._v(" "),s("td",[t._v("表示目录映射关系，即宿主机目录:容器中目录。注意:最好做目录映射，在宿主机上做修改，然后共享到容器上。")])]),t._v(" "),s("tr",[s("td",[t._v("-p")]),t._v(" "),s("td",[t._v("表示端口映射，即宿主机端口:容器中端口。 比如:-p 8080:80 就是将容器中的80端口,映射到主机中的8080端口")])]),t._v(" "),s("tr",[s("td",[t._v("–network=host")]),t._v(" "),s("td",[t._v("表示将主机的网络环境映射到容器中，使容器的网络与主机相同。每个 Docker 容器都有自己的网络连接空间连接到虚拟 LAN。使用此命令则会让容器和主机共享一个网络空间。")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td")])])]),t._v(" "),s("p",[t._v("可以启动一个系统"),s("code",[t._v("docker run -i -d -t --name=kali-test kalilinux/kali-rolling")]),t._v("(这里我使用linux的一个发行版kali作为介绍)\n或可以简写为"),s("code",[t._v("docker run -idt --name=kali-test kalilinux/kali-rolling")])]),t._v(" "),s("div",{staticClass:"custom-block note"},[s("p",{staticClass:"custom-block-title"},[t._v("笔记")]),t._v(" "),s("p",[t._v("PS: 如果加载一个我们没有的镜像,docker会自动从官方仓库中进行拉去。")])]),t._v(" "),s("p",[t._v("或者我们可以启动一个网站"),s("code",[t._v("docker run -dp 8080:80 --name docker-test docker/getting-started")])]),t._v(" "),s("p",[t._v("如果你没有下载docker/getting-started的进行,这里会自动帮你下载。")]),t._v(" "),s("h2",{attrs:{id:"与容器进行交互"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#与容器进行交互"}},[t._v("#")]),t._v(" 与容器进行交互")]),t._v(" "),s("p",[t._v("上面我们成功将镜像变成了容器,但上述的命令中我们都加入了-d,让容器在后台运行了。下面我们就来讲如何和正在运行的容器进行交互。")]),t._v(" "),s("h3",{attrs:{id:"查看容器-docker-ps"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看容器-docker-ps"}},[t._v("#")]),t._v(" 查看容器(docker ps)")]),t._v(" "),s("p",[t._v("查看容器主要会用到ps命令")]),t._v(" "),s("div",{staticClass:"language-powershell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看当前所有正在运行的容器")]),t._v("\ndocker "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看当前所有的容器")]),t._v("\ndocker "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("a\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用过滤器(除了name外,常用的还可以指定id:id= 、所有停止的容器:status=exited,正在运行的容器:status=running 等)")]),t._v("\ndocker "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("f name=指定的名字\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示2个上次创建的容器(2可以改变)")]),t._v("\ndocker "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("n 2\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示最新创建的容器（包括所有状态）")]),t._v("\ndocker "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("l\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 仅显示ip")]),t._v("\ndocker "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("q\n "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示容器大小")]),t._v("\ndocker "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("s\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br")])]),s("table",[s("thead",[s("tr",[s("th",[t._v("标签")]),t._v(" "),s("th",[t._v("含义")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("CONTAINER ID")]),t._v(" "),s("td",[t._v("镜像ID")])]),t._v(" "),s("tr",[s("td",[t._v("IMAGE")]),t._v(" "),s("td",[t._v("创建容器的镜像名称")])]),t._v(" "),s("tr",[s("td",[t._v("COMMAND")]),t._v(" "),s("td",[t._v("默认启动命令(启动时会自动执行)")])]),t._v(" "),s("tr",[s("td",[t._v("CREATED")]),t._v(" "),s("td",[t._v("创建容器的日期")])]),t._v(" "),s("tr",[s("td",[t._v("STATUS")]),t._v(" "),s("td",[t._v("当前的状态(启动了多久,多久之前退出等)")])]),t._v(" "),s("tr",[s("td",[t._v("PORTS")]),t._v(" "),s("td",[t._v("映射的端口")])]),t._v(" "),s("tr",[s("td",[t._v("NAMES")]),t._v(" "),s("td",[t._v("容器的名称")])]),t._v(" "),s("tr",[s("td",[t._v("SIZE")]),t._v(" "),s("td",[t._v("容器大小(使用-s命令参数时才能看到)")])])])]),t._v(" "),s("h3",{attrs:{id:"启动和关闭容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#启动和关闭容器"}},[t._v("#")]),t._v(" 启动和关闭容器")]),t._v(" "),s("div",{staticClass:"language-powershell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 停止容器")]),t._v("\ndocker container stop 容器名或容器id\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 或可简写为")]),t._v("\ndocker stop 容器名或容器id\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 强制关闭容器")]),t._v("\ndocker container "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("kill")]),t._v(" 容器名或容器id\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 或可简写为")]),t._v("\ndocker "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("kill")]),t._v(" 容器名或容器id\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启动容器")]),t._v("\ndocker container "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),t._v(" 容器名或容器id\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 或可简写为")]),t._v("\ndocker "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),t._v(" 容器名或容器id\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br")])]),s("ul",[s("li",[t._v("如果我们成功启动或者关闭一个容器的话,会返回容器名或者容器id")]),t._v(" "),s("li",[t._v("stop和kill的区别: stop是比较优雅的关掉一个容器,类似我们正常退出一个软件,而kill是当一个进程出现意外无法正常关闭的时候,我们强行进行关闭,有点像我们使用任务管理器进行结束进程操作")])]),t._v(" "),s("h3",{attrs:{id:"操作后台容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#操作后台容器"}},[t._v("#")]),t._v(" 操作后台容器")]),t._v(" "),s("p",[t._v("首先我们确保我们要进入的容器是开启状态的,使用docker ps -a查看其中的STATUS属性是否是Up开头,如果不是先照着上面启动容器的方法开启容器\n我们开启容器后,如果需要在容器内执行命令,可以将后台切换到前台,也可能使用docker命令将我们需要执行的命令传入。\n操作方法有很多种,这里我们介绍一些比较常用的方法")]),t._v(" "),s("div",{staticClass:"language-powershell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果我只需要执行简单的一两条命令可以使用docker exec")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 执行单条命令 (-i: 启动并且保留交互式命令行; -t:作用是分配一个虚拟的终端; docker run )")]),t._v("\ndocker exec "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("it 容器名或容器id 执行的命令\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 比如")]),t._v("\ndocker exec "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("it kali-test whoami\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 用这种方法,我们还可以启动命令行,根据Linux的特性,系统程序会在/bin中,linux中常用的Shell有多个,其中大部分用的Linux默认的为bash")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 所以我们启动命令可以自行如下命令(除了/bin/bash外,linux一般还会带/bin/sh、/bin/rbash、/bin/dash等,具体区别可以自行百度)")]),t._v("\ndocker exec "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("it 容器名或容器id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("bin/bash\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 比如")]),t._v("\ndocker exec "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("it kali-test "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("bin/bash\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 除了exec外还有attach可以使用,但它有个弊端,多终端启动attach后,都会会同步显示。如果有一个窗口阻塞了，那么其他窗口也无法再进行操作。")]),t._v("\ndocker attach 容器名或容器id\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 比如")]),t._v("\ndocker attach kali-test\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br")])]),s("table",[s("thead",[s("tr",[s("th",[t._v("exec可选参数")]),t._v(" "),s("th",[t._v("作用")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("-d")]),t._v(" "),s("td",[t._v("会创建一个守护式容器在后台运行(这样创建容器后不会自动登录容器)。")])]),t._v(" "),s("tr",[s("td",[t._v("-e")]),t._v(" "),s("td",[t._v("设置环境变量")])]),t._v(" "),s("tr",[s("td",[t._v("-i")]),t._v(" "),s("td",[t._v("表示以《交互模式》运行容器。")])]),t._v(" "),s("tr",[s("td",[t._v("-t")]),t._v(" "),s("td",[t._v("表示容器启动后会进入其命令行。加入这两个参数后，容器创建就能登录进去。即分配一个伪终端。")])]),t._v(" "),s("tr",[s("td",[t._v("-u")]),t._v(" "),s("td",[t._v("设置用户名和UID。")])]),t._v(" "),s("tr",[s("td",[t._v("-w")]),t._v(" "),s("td",[t._v("设置容器内的工作目录。")])])])]),t._v(" "),s("h3",{attrs:{id:"删除容器-docker-rm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除容器-docker-rm"}},[t._v("#")]),t._v(" 删除容器(docker rm)")]),t._v(" "),s("p",[t._v("如我我们需要删除一个容器,首先需要确保这个容器已经停止了,因为正在运行的容器是无法直接删除。\n我们可以运行一下"),s("code",[t._v("docker ps -a")]),t._v(",如果发现没有停止,可以使用"),s("code",[t._v("docker stop")]),t._v("停止(STATUS下已Exited开头则是停止的)")]),t._v(" "),s("div",{staticClass:"language-powershell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用rm删除容器")]),t._v("\ndocker "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" 容器名或容器id\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 列如")]),t._v("\ndocker "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" docker-test\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("h3",{attrs:{id:"容器制作成镜像"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#容器制作成镜像"}},[t._v("#")]),t._v(" 容器制作成镜像")]),t._v(" "),s("p",[t._v("我们为什么要把容器制作成镜像?")]),t._v(" "),s("ul",[s("li",[t._v("镜像可以看作为是一种备份,如果我们后期环境出现了问题,可以还原到早期镜像。")]),t._v(" "),s("li",[t._v("镜像便于传播,可以让自己的其他设备或他人的重复利用变得更加简单容易。")])]),t._v(" "),s("div",{staticClass:"language-powershell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将容器制作成镜像")]),t._v("\ndocker commit 容器名 镜像名\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 镜像打包备份(打包备份的文件会自动存放在当前命令行的路径下,如果想让保存的文件可以打开,可以加.tar后缀)")]),t._v("\ndocker save "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("o 保存的文件名 镜像名\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 镜像解压")]),t._v("\ndocker load "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("i 文件路径"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("备份文件\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[t._v("我们将打包备份的镜像可以通过网络发送到其他设备上,使用docker镜像解压即可直接使用你的环境。")])])}),[],!1,null,null,null);s.default=r.exports}}]);