(window.webpackJsonp=window.webpackJsonp||[]).push([[187],{564:function(t,s,e){"use strict";e.r(s);var a=e(5),r=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"查询操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查询操作"}},[t._v("#")]),t._v(" 查询操作")]),t._v(" "),s("h2",{attrs:{id:"select-语句简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#select-语句简介"}},[t._v("#")]),t._v(" select 语句简介")]),t._v(" "),s("p",[t._v("这里补充说明一下“主键”的作用。如果将某一列设置为主键，那么这一列的值具有两个特点：**① 不允许为空（null），②具有唯一性。**一般情况下，每个表都需要有一个作为主键的列，这样可以保证每一行数据都有一个唯一标识。")]),t._v(" "),s("p",[t._v("举个简单的例子，如果一条记录包含了身份证号、姓名、性别、年龄等，那么怎样对两个人进行区分呢？很明显，只有通过身份证号才可以，因为姓名、性别、年龄这些都可能是相同的。所以主键就相当于每一行数据的“身份证号”，可以对不同行数据进行区分。")]),t._v(" "),s("p",[t._v("此外，在实际开发中，包含小数的列建议使用 decimal 类型，而不使用 float 或 double 类型。主要是因为 decimal 类型不存在精度损失，而 float 或 double 类型可能存在精度损失。")]),t._v(" "),s("h3",{attrs:{id:"select-语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#select-语句"}},[t._v("#")]),t._v(" select 语句")]),t._v(" "),s("p",[t._v("在 MySQL 中，可以使用 select 语句来对一个表进行查询操作。其中，select 是 SQL 中的关键字。select 语句是 SQL 所有语句中用得最多的一种语句，如果你能把 select 语句认真掌握好，那么说明离掌握 SQL 已经不远了。")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("select 列名 from 表名;\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("select 语句由“select 子句”和“from 子句”这两个部分组成。可能小伙伴们会觉得很奇怪：为什么这里除了有“select 语句”这种叫法之外，还有“select 子句”这样的叫法呢？")]),t._v(" "),s("p",[t._v("实际上，select 语句是“查询语句”的统称，它是由“子句”组合而成的。“子句”是语句的一部分，不能单独使用。select 语句包含的子句（查询子句）主要有 7 种，如表 3-1 所示。")]),t._v(" "),s("p",[s("strong",[t._v("表 3-1　查询子句")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("子句")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("select")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("查询哪些列")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("from")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("从哪个表查询")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("where")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("查询条件")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("group by")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("分组")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("having")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("分组条件")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("order by")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("排序")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("limit")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("限制行数")])])])]),t._v(" "),s("p",[t._v("从表 3-1 可以看出，where、group by、order by 等其实都属于查询子句，它们都是配合 select 子句使用的。小伙伴们一定要深刻地理解这一点，这样在后续的学习过程中才会有一个清晰的学习思路。")]),t._v(" "),s("p",[s("strong",[t._v("举例：查询一列")])]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("select name from fruit;\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("运行结果如图 3-3 所示。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2024/11/01/9mfo3wvHFcZha7p.jpg",alt:"{%}"}})]),t._v(" "),s("p",[s("strong",[t._v("举例：查询多列")])]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" price "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" fruit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("运行结果如图 3-4 所示。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2024/11/01/Wm25TfdxXqnyzOE.jpg",alt:"{%}"}})]),t._v(" "),s("p",[t._v("其中列名通过 "),s("code",[t._v(",")]),t._v(" 分割，书写的顺序也就是查询出来的数据排列顺序")]),t._v(" "),s("h3",{attrs:{id:"特殊列名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#特殊列名"}},[t._v("#")]),t._v(" 特殊列名")]),t._v(" "),s("p",[t._v("如果列名中包含空格，此时应该怎么办呢？比如名称这一列的列名是“fruit name”（两个单词中间有一个空格），则小伙伴们可能会写出下面的 SQL 语句。")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("select fruit name from fruit;\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("实际上，上面这条语句是无效的。对于包含空格的列名，需要使用反引号（"),s("code",[t._v("）将其引起来。反引号（")]),t._v("）在键盘左上方数字 1 的左边，切换到英文状态下可以输入。")]),t._v(" "),s("p",[t._v("我们尝试在 Navicat for MySQL 中将 fruit 表中的“name”这个列名改为“fruit name”，然后执行下面的 SQL 语句，此时运行结果如图 3-9 所示。")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("select `fruit name` from fruit;\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2024/11/01/3yoHJWaulhemdEF.jpg",alt:"{%}"}})]),t._v(" "),s("p",[s("strong",[t._v("图 3-9")])]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),s("p",[s("strong",[t._v("需要特别注意的是，对于特殊列名（如包含空格），只能使用反引号将其引起来，而不能使用单引号或双引号。")])])]),t._v(" "),s("h2",{attrs:{id:"使用别名-as"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用别名-as"}},[t._v("#")]),t._v(" 使用别名：as")]),t._v(" "),s("p",[t._v("在使用 SQL 语句查询数据时，可以使用 as 关键字给一个列名起一个别名。起别名的作用是：增强代码和查询结果的可读性。")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("语法")]),t._v("：")])]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("select 列名 as 别名\nfrom 表名;\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("blockquote",[s("p",[s("strong",[t._v("说明")]),t._v("：")])]),t._v(" "),s("p",[t._v("在实际开发中，一般建议在以下几种情况中使用别名。对于内置函数和多表查询，后续内容会详细介绍。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("列名比较长或可读性差。")])]),t._v(" "),s("li",[s("strong",[t._v("使用内置函数。")])]),t._v(" "),s("li",[s("strong",[t._v("用于多表查询。")])]),t._v(" "),s("li",[s("strong",[t._v("需要把两个或更多的列放在一起。")])])]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("举例：英文别名")])])]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("select name as fruit_name\nfrom fruit;\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("运行结果如图 3-11 所示。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2024/11/01/pzaOWy3bxA4rtLH.jpg",alt:"{%}"}})]),t._v(" "),s("p",[s("strong",[t._v("图 3-11")])]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),s("ul",[s("li",[t._v("别名只在当前的查询结果中显示，真实表中的列名并不会改变。")]),t._v(" "),s("li",[t._v("在使用 as 关键字起别名时，如果别名中包含了保留字或者特殊字符，如空格、加号（+）、减号（-）等，那么该别名必须用英文引号引起来。")])])]),t._v(" "),s("h2",{attrs:{id:"条件子句-where"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#条件子句-where"}},[t._v("#")]),t._v(" 条件子句：where")]),t._v(" "),s("p",[t._v("在 MySQL 中，可以使用 where 子句来指定查询的条件。where 子句是配合 select 子句来使用的。")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("语法")]),t._v("：")])]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("select 列名\nfrom 表名\nwhere 条件;\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("blockquote",[s("p",[s("strong",[t._v("说明")]),t._v("：")])]),t._v(" "),s("p",[t._v("where 子句一般需要结合运算符来使用，主要包括以下 3 类运算符。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("比较运算符。")])]),t._v(" "),s("li",[s("strong",[t._v("逻辑运算符。")])]),t._v(" "),s("li",[s("strong",[t._v("其他运算符。")])])]),t._v(" "),s("h3",{attrs:{id:"比较运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#比较运算符"}},[t._v("#")]),t._v(" 比较运算符")]),t._v(" "),s("p",[t._v("在 where 子句中，可以使用比较运算符来指定查询的条件。常用的比较运算符如表 3-2 所示。")]),t._v(" "),s("p",[s("strong",[t._v("表 3-2　比较运算符")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("运算符")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v(">")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("大于")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("<")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("小于")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("=")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("等于")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v(">=")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("大于或等于")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("<=")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("小于或等于")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("!>")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("不大于（相当于 <=）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("!<")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("不小于（相当于 >=）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("!= 或 <>")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("不等于")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("<=>")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("安全等于")])])])]),t._v(" "),s("p",[t._v("对于 MySQL 中的运算符，我们需要清楚以下 3 点。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("对于“等于”，MySQL 使用的是“=”而不是“==”，这一点和其他编程语言不同。")])]),t._v(" "),s("li",[s("strong",[t._v("对于“不等于”，MySQL 有两种表示方式：“!=”和“<>”。")])]),t._v(" "),s("li",[s("strong",[t._v("只有 MySQL 中才有“<=>”运算符，SQL Server、Oracle、PostgreSQL 等是没有的。")])])]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("举例：等于（数值）")])])]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("select name, price\nfrom fruit\nwhere price = 27.3;\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("运行结果如图 3-17 所示。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2024/11/01/wMRGnLy4sTlQCEc.jpg",alt:"{%}"}})]),t._v(" "),s("h3",{attrs:{id:"逻辑运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#逻辑运算符"}},[t._v("#")]),t._v(" 逻辑运算符")]),t._v(" "),s("p",[t._v("在 where 子句中，如果需要同时指定多个查询条件，就需要使用逻辑运算符。MySQL 的逻辑运算符有两种写法：一种是“关键字”，如表 3-3 所示；另一种是“符号”，如表 3-4 所示。")]),t._v(" "),s("p",[s("strong",[t._v("表 3-3　关键字")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("运算符")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("and")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("与")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("or")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("或")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("not")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("非")])])])]),t._v(" "),s("p",[s("strong",[t._v("表 3-4　符号")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("运算符")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("&&")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("与")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("||")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("或")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("!")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("非")])])])]),t._v(" "),s("p",[t._v("在实际开发中，一般情况下都使用“关键字”这种写法。")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("举例：与运算")])])]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("select name, price\nfrom fruit\nwhere price > 10 and price < 20;\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("运行结果如图 3-22 所示。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://www.ituring.com.cn/figures/2023/MySQL021/053.jpg",alt:"{%}"}})]),t._v(" "),s("p",[s("strong",[t._v("图 3-22")])]),t._v(" "),s("h3",{attrs:{id:"其他运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其他运算符"}},[t._v("#")]),t._v(" 其他运算符")]),t._v(" "),s("p",[t._v("除了比较运算符和逻辑运算符之外，MySQL 的其他运算符如表 3-5 所示。这些运算符也是非常重要的，小伙伴们也要认真掌握。")]),t._v(" "),s("p",[s("strong",[t._v("表 3-5　其他运算符")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("运算符")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("is null 或 isnull")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("是否为 null 值")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("is not null")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("是否不为 null 值")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("in")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("是否为列表中的值")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("not in")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("是否不为列表中的值")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("between A and B")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("是否处于 A 和 B 之间（取值范围为 [A, B]，包含 A 也包含 B）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("not between A and B")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("是否不处于 A 和 B 之间")])])])]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" fruit_miss\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" price "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("is")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" price\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" fruit\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'葡萄'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'柿子'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'橘子'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" price\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" fruit\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" price "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("between")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("h3",{attrs:{id:"运算符优先级"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运算符优先级"}},[t._v("#")]),t._v(" 运算符优先级")]),t._v(" "),s("p",[t._v("优先级也就是执行顺序的意思。例如，数学中的加减乘除运算就有一定的优先级，即有“()”就得先算“()”，然后算“乘除”，最后才算“加减”。")]),t._v(" "),s("p",[t._v("在 "),s("code",[t._v("MySQL")]),t._v(" 中，逻辑运算符也是有优先级的，规则很简单：**优先级高的先运算，优先级低的后运算；优先级相同的，从左到右进行运算。**对于运算符优先级，我们需要清楚以下两个规则。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("在算术运算中，“乘除”的优先级比“加减”的优先级要高。")])]),t._v(" "),s("li",[s("strong",[t._v("在逻辑运算中，优先级由高到低为非（not）、与（and）、或（or）。")])])]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" season"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" price\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" fruit\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("season "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'夏'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" price "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("or")]),t._v(" price "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("因此在实际开发中还是建议加上一些必要的“()”，这样可以让代码的可读性更高。")]),t._v(" "),s("h2",{attrs:{id:"排序子句-order-by"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#排序子句-order-by"}},[t._v("#")]),t._v(" 排序子句：order by")]),t._v(" "),s("h3",{attrs:{id:"语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[t._v("#")]),t._v(" 语法")]),t._v(" "),s("blockquote",[s("p",[t._v("语法")])]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" 列名\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" 表名\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("order")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" 列名 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("asc")]),t._v(" 或 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("desc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[s("code",[t._v("asc")]),t._v(" 表示升序排列，也就是从小到大排列；"),s("code",[t._v("desc")]),t._v(" 表示降序排列，也就是从大到小排列。其中，"),s("code",[t._v("asc")]),t._v(" 是“ascend”（上升）的缩写，而 "),s("code",[t._v("desc")]),t._v(" 是“descend”（下降）的缩写。")]),t._v(" "),s("h3",{attrs:{id:"对多列排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对多列排序"}},[t._v("#")]),t._v(" "),s("strong",[t._v("对多列排序")])]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" price"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("date")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" fruit\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("order")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" price "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("desc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("date")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("desc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("h3",{attrs:{id:"结合-where-子句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#结合-where-子句"}},[t._v("#")]),t._v(" "),s("strong",[t._v("结合 where 子句")])]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" price\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" fruit\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" price "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("order")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" price "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("desc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),s("p",[t._v("order by 子句可以结合 where 子句来使用，且 order by 子句必须放在 where 子句的后面。因为要先执行 where 子句来筛选数据，然后再执行 order by 子句来排序。")])]),t._v(" "),s("h3",{attrs:{id:"中文排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#中文排序"}},[t._v("#")]),t._v(" 中文排序")]),t._v(" "),s("p",[t._v("在默认情况下，"),s("code",[t._v("MySQL")]),t._v(" 使用的是 "),s("code",[t._v("utf-8")]),t._v(" 字符集，此时对中文字符串进行排序，并不会按照中文拼音的顺序来进行。如果想要按照中文拼音顺序来进行排序，则需要借助 "),s("code",[t._v("convert()")]),t._v(" 函数来实现。")]),t._v(" "),s("p",[s("code",[t._v("convert( 列名 using gbk)")]),t._v(" 表示强制该列使用 "),s("code",[t._v("gbk")]),t._v(" 字符集。")]),t._v(" "),s("p",[s("strong",[t._v("直接排序：")])]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" price\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" fruit\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("order")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),s("p",[t._v("从结果可以看出，name 这一列并没有按照中文拼音顺序进行排序")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2024/11/28/9uJUvTqMzwgGoCW.jpg",alt:"{%}"}})]),t._v(" "),s("p",[s("strong",[t._v("使用 "),s("code",[t._v("convert()")]),t._v(" 函数")])]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" price\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" fruit\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("order")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("convert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" gbk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2024/11/28/URLhjgHBV8vdJ2b.jpg",alt:"{%}"}})]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),s("p",[t._v("对于 select 子句来说，中文别名两侧的引号可加可不加。但是对于 order by 子句来说，中文别名两侧是一定不能加上引号的。如果加上引号，排序就无法成功。所以"),s("strong",[t._v("建议统一不加引号，这样可以避免出错")]),t._v("。")])]),t._v(" "),s("h2",{attrs:{id:"限制行数-limit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#限制行数-limit"}},[t._v("#")]),t._v(" 限制行数：limit")]),t._v(" "),s("h3",{attrs:{id:"limit-子句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#limit-子句"}},[t._v("#")]),t._v(" limit 子句")]),t._v(" "),s("p",[t._v("在默认情况下，select 语句会把符合条件的“所有行数据（所有记录）”都查询出来。如果查询到的记录有 100 条，而我们只需要获取前 10 条，此时应该怎么办呢？")]),t._v(" "),s("p",[s("strong",[t._v("获取前"),s("code",[t._v("5")]),t._v("条数据：")])]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" price\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" fruit\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("limit")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2024/11/28/9lW4gbLQoeAa2PT.jpg",alt:"{%}"}})]),t._v(" "),s("h3",{attrs:{id:"指定数值范围"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#指定数值范围"}},[t._v("#")]),t._v(" 指定数值范围")]),t._v(" "),s("p",[t._v("想要获取售价最高的前 5 条记录，使用 "),s("code",[t._v("limit")]),t._v(" 关键字就可以轻松实现。但是如果要获取售价最高的第 2~5 条记录，又应该怎么实现呢？")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("语法")])])]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- start 表示开始位置，默认值是 0。n 表示获取 n 条记录。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("limit")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- limit 1, 4")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("h2",{attrs:{id:"去重处理-distinct"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#去重处理-distinct"}},[t._v("#")]),t._v(" 去重处理：distinct")]),t._v(" "),s("p",[t._v("在 "),s("code",[t._v("MySQL")]),t._v(" 中，可以使用 "),s("code",[t._v("distinct")]),t._v(" 关键字来实现数据的去重。所谓的数据去重，指的是去除多个重复行，只保留其中一行。")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("语法")])])]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("distinct")]),t._v(" 字段列表\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" 表名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),s("p",[s("code",[t._v("distinct")]),t._v(" 关键字用于 "),s("code",[t._v("select")]),t._v(" 子句中，它总是紧跟在 "),s("code",[t._v("select")]),t._v(" 关键字之后，并且位于第一个列名之前。此外，"),s("code",[t._v("distinct")]),t._v(" 关键字作用于整个字段列表的所有列，而不是单独的某一列。")])]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("null值")])])]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),s("p",[t._v("需要清楚的是，null 值被视为一类数据。如果列中存在多个 null 值，则只会保留一个 null 值。")])]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("用于多列")])])]),t._v(" "),s("p",[s("strong",[t._v("原数据：")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2024/11/28/cmOS7ZenvWHY5Mx.jpg",alt:"{%}"}})]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("distinct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" season\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" fruit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[s("strong",[t._v("结果")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2024/11/28/rKnpATd1fscIUZ9.jpg",alt:"{%}"}})]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("错误方式:")])]),t._v(" "),s("p",[t._v("需要注意的是，distinct 关键字只能位于字段列表第一个列名之前，然后它会对整个字段列表的所有列进行去重处理。下面两种方式都是错误的。")])]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 错误方式 1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("distinct")]),t._v(" season\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" fruit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 错误方式 2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("distinct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("distinct")]),t._v(" season\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" fruit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("h2",{attrs:{id:"情景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#情景"}},[t._v("#")]),t._v(" 情景")]),t._v(" "),s("p",[t._v("一张 student 表：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("id")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("name")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("sex")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("grade")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("birthday")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("major")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("张欣欣")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("女")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("86")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("2000-03-02")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("计算机科学")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("2")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("刘伟达")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("男")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("92")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("2001-06-13")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("网络工程")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("3")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("杨璐璐")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("女")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("72")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("2000-05-01")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("软件工程")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("4")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("王明刚")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("男")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("80")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("2002-10-17")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("电子商务")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("5")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("张伟")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("男")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("65")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("2001-11-09")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("人工智能")])])])]),t._v(" "),s("p",[t._v("（1）查询成绩在 80 和 100 之间的学生的基本信息。")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("点击查看")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" student "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" grade "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("between")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])]),t._v(" "),s("p",[t._v("（2）查询所有学生的基本信息，并按照成绩从高到低进行排序。")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("点击查看")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" student "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("order")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" grade "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("desc")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])]),t._v(" "),s("p",[t._v("（3）查询成绩前 3 名的学生的基本信息。")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("点击查看")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" student "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("order")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" grade "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("desc")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("limit")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])]),t._v(" "),s("p",[t._v("（4）查询所有学生的 name、grade、major 这 3 列的信息。")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("点击查看")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("grade"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("major "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" student\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])]),t._v(" "),s("p",[t._v("（5）查询所有学生的 name、grade 这两列的信息，并且给 name 列起一个别名“姓名”，给 grade 列起一个别名“成绩”")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("点击查看")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("姓名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("grade "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("姓名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" student\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);