(window.webpackJsonp=window.webpackJsonp||[]).push([[247],{622:function(t,s,a){"use strict";a.r(s);var n=a(5),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("不知道大家有没有感觉很神奇，只是通过装饰器声明了一下，然后启动 Nest 应用，这时候对象就给创建好了，依赖也给注入了。")]),t._v(" "),s("p",[t._v("那它是怎么实现的呢？")]),t._v(" "),s("p",[t._v("大家如果就这样去思考它的实现原理，还真不一定能想出来，因为缺少了一些前置知识。也就是实现 Nest 最核心的一些 "),s("code",[t._v("api")]),t._v("： "),s("code",[t._v("Reflect")]),t._v(" 的 "),s("code",[t._v("metadata")]),t._v(" 的 "),s("code",[t._v("api")]),t._v("。")]),t._v(" "),s("p",[t._v("有的同学会说，"),s("code",[t._v("Reflect")]),t._v(" 的 "),s("code",[t._v("api")]),t._v(" 我很熟呀，就是操作对象的属性、方法、构造器的一些 "),s("code",[t._v("api")]),t._v("：")]),t._v(" "),s("p",[t._v("比如 "),s("code",[t._v("Reflect.get")]),t._v(" 是获取对象属性值")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/19/MIKxRmgo1apy3Wh.png",alt:""}})]),t._v(" "),s("p",[s("code",[t._v("Reflect.set")]),t._v(" 是设置对象属性值")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/19/H5FqRL7pkt1sjMy.png",alt:""}})]),t._v(" "),s("p",[s("code",[t._v("Reflect.has")]),t._v(" 是判断对象属性是否存在")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/19/nSokNpU2drsBm9A.png",alt:""}})]),t._v(" "),s("p",[s("code",[t._v("Reflect.apply")]),t._v(" 是调用某个方法，传入对象和参数")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/19/xKjMvyCiIsAbBQu.png",alt:""}})]),t._v(" "),s("p",[s("code",[t._v("Reflect.construct")]),t._v(" 是用构造器创建对象实例，传入构造器参数")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/19/zEGkDLgI6Cbhu7O.png",alt:""}})]),t._v(" "),s("p",[t._v("这些 "),s("code",[t._v("api")]),t._v(" 在 "),s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",target:"_blank",rel:"noopener noreferrer"}},[t._v("MDN 文档"),s("OutboundLink")],1),t._v("里可以查到，因为它们都已经是 "),s("code",[t._v("es")]),t._v(" 标准了，也被很多浏览器实现了。")]),t._v(" "),s("h2",{attrs:{id:"reflect-metadata"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reflect-metadata"}},[t._v("#")]),t._v(" Reflect metadata")]),t._v(" "),s("p",[t._v("但是实现 "),s("code",[t._v("Nest")]),t._v(" 用到的 "),s("code",[t._v("api")]),t._v(" 还没有进入标准，还在草案阶段，也就是 "),s("a",{attrs:{href:"https://rbuckton.github.io/reflect-metadata/",target:"_blank",rel:"noopener noreferrer"}},[t._v("metadata 的 api"),s("OutboundLink")],1),t._v("：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/19/4c7a5Hw9ZRNg6F3.png",alt:""}})]),t._v(" "),s("p",[t._v("它有这些 "),s("code",[t._v("api")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-typescript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[t._v("Reflect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineMetadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("metadataKey"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" metadataValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nReflect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineMetadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("metadataKey"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" metadataValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" propertyKey"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Reflect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMetadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("metadataKey"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Reflect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMetadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("metadataKey"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" propertyKey"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("p",[s("code",[t._v("Reflect.defineMetadata")]),t._v(" 和 "),s("code",[t._v("Reflect.getMetadata")]),t._v(" 分别用于设置和获取某个类的元数据，如果最后传入了属性名，还可以单独为某个属性设置元数据。")]),t._v(" "),s("p",[t._v("那元数据存在哪呢？")]),t._v(" "),s("p",[t._v("存在类或者对象上呀，如果给类或者类的静态属性添加元数据，那就保存在类上，如果给实例属性添加元数据，那就保存在对象上，用类似 "),s("code",[t._v("[[metadata]]")]),t._v(" 的 "),s("code",[t._v("key")]),t._v(" 来存的。")]),t._v(" "),s("p",[t._v("这有啥用呢？")]),t._v(" "),s("p",[t._v("看上面的 "),s("code",[t._v("api")]),t._v(" 确实看不出啥来，但它也支持装饰器的方式使用：")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("@Reflect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("metadataKey"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" metadataValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("C")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  @Reflect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("metadataKey"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" metadataValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("method")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("p",[s("code",[t._v("Reflect.metadata")]),t._v(" 装饰器当然也可以再封装一层：")]),t._v(" "),s("div",{staticClass:"language-typescript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Reflect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"design:type"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ParamTypes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("types"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Reflect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"design:paramtypes"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" types"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ReturnType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Reflect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"design:returntype"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token decorator"}},[s("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ParamTypes")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Guang")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token decorator"}},[s("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Type")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token decorator"}},[s("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Type")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token decorator"}},[s("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ParamTypes")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token decorator"}},[s("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ReturnType")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br")])]),s("p",[t._v("然后我们就可以通过 "),s("code",[t._v("Reflect metadata")]),t._v(" 的 "),s("code",[t._v("api")]),t._v(" 获取这个类和对象的元数据了：")]),t._v(" "),s("div",{staticClass:"language-typescript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Guang")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" paramTypes "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Reflect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMetadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"design:paramtypes"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"add"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [Number, Number]")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("这里我们用 "),s("code",[t._v("Reflect.getMetadata")]),t._v(" 的 "),s("code",[t._v("api")]),t._v(" 取出了 "),s("code",[t._v("add")]),t._v(" 方法的参数的类型。")]),t._v(" "),s("p",[t._v("看到这里，大家是否明白 "),s("code",[t._v("nest")]),t._v(" 的原理了呢？")]),t._v(" "),s("p",[t._v("我们再看下 nest 的源码：")]),t._v(" "),s("h2",{attrs:{id:"module-装饰器的实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#module-装饰器的实现"}},[t._v("#")]),t._v(" "),s("code",[t._v("@Module")]),t._v(" 装饰器的实现")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/19/D4vFzNqrS6ju5QO.png",alt:""}})]),t._v(" "),s("p",[t._v("上面就是 "),s("code",[t._v("@Module")]),t._v(" 装饰器的实现，里面就调用了 "),s("code",[t._v("Reflect.defineMetadata")]),t._v(" 来给这个类添加了一些元数据。")]),t._v(" "),s("p",[t._v("所以我们这样用的时候：")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Module "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@nestjs/common'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" CatsController "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./cats.controller'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" CatsService "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./cats.service'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n@"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Module")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("controllers")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("CatsController"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("providers")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("CatsService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CatsModule")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("p",[t._v("其实就是给 "),s("code",[t._v("CatsModule")]),t._v(" 添加了 "),s("code",[t._v("controllers")]),t._v(" 的元数据和 "),s("code",[t._v("providers")]),t._v(" 的元数据。")]),t._v(" "),s("p",[t._v("后面创建 "),s("code",[t._v("IOC")]),t._v(" 容器的时候就会取出这些元数据来处理：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/19/9lcfRX7EOqvkJTA.png",alt:""}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/19/2eqgKskOXbhyU8C.png",alt:""}})]),t._v(" "),s("p",[t._v("而且 @Controller 和 @Injectable 的装饰器也是这样实现的：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/19/Hrn2XL5dYvCwEIO.png",alt:""}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/19/MTyGVcCn4Y2is1b.png",alt:""}})]),t._v(" "),s("p",[t._v("Nest 的实现原理就是通过装饰器给 "),s("code",[t._v("class")]),t._v(" 或者对象添加元数据，然后初始化的时候取出这些元数据，进行依赖的分析，然后创建对应的实例对象就可以了。")]),t._v(" "),s("p",[t._v("所以说，"),s("code",[t._v("nest")]),t._v(" 实现的核心就是 "),s("code",[t._v("Reflect metadata")]),t._v(" 的 "),s("code",[t._v("api")]),t._v("。")]),t._v(" "),s("p",[t._v("当然，现在 "),s("code",[t._v("metadata")]),t._v(" 的 "),s("code",[t._v("api")]),t._v(" 还在草案阶段，需要使用 "),s("code",[t._v("reflect-metadata")]),t._v(" 这个 "),s("code",[t._v("polyfill")]),t._v(" 包才行。")]),t._v(" "),s("h2",{attrs:{id:"ts-的emitdecoratormetadata"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ts-的emitdecoratormetadata"}},[t._v("#")]),t._v(" Ts 的"),s("code",[t._v("emitDecoratorMetadata")])]),t._v(" "),s("p",[t._v("其实还有一个疑问，依赖的扫描可以通过 "),s("code",[t._v("metadata")]),t._v(" 数据，但是创建的对象需要知道构造器的参数，现在并没有添加这部分 "),s("code",[t._v("metadata")]),t._v(" 数据呀：")]),t._v(" "),s("p",[t._v("比如这个 "),s("code",[t._v("CatsController")]),t._v(" 依赖了 "),s("code",[t._v("CatsService")]),t._v("，但是并没有添加 "),s("code",[t._v("metadata")]),t._v(" 呀：")]),t._v(" "),s("div",{staticClass:"language-typescript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Body"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Controller"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Get"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Param"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Post "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@nestjs/common'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" CatsService "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./cats.service'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" CreateCatDto "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./dto/create-cat.dto'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token decorator"}},[s("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Controller")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cats'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CatsController")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("readonly")]),t._v(" catsService"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" CatsService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token decorator"}},[s("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Post")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token decorator"}},[s("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Body")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" createCatDto"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" CreateCatDto"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("catsService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("createCatDto"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token decorator"}},[s("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Get")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findAll")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Cat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("catsService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findAll")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br")])]),s("p",[t._v("这就不得不提到 "),s("code",[t._v("TypeScript")]),t._v(" 的优势了，"),s("code",[t._v("TypeScript")]),t._v(" 支持编译时自动添加一些 "),s("code",[t._v("metadata")]),t._v(" 数据：")]),t._v(" "),s("p",[t._v("比如这段代码：")]),t._v(" "),s("div",{staticClass:"language-ts line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"reflect-metadata"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Guang")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token decorator"}},[s("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Reflect")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"名字"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"光光"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("say")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'加油鸭'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("p",[t._v("按理说我们只添加了一个元数据，生成的代码也确实是这样的：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/19/C94QwSN5m7Yz1po.png",alt:""}})]),t._v(" "),s("p",[t._v("但是呢，ts 有一个编译选项叫做 "),s("code",[t._v("emitDecoratorMetadata")]),t._v("，开启它就会自动添加一些元数据。")]),t._v(" "),s("p",[t._v("开启之后再试一下：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/19/dlJuSpny72C1YIP.png",alt:""}})]),t._v(" "),s("p",[t._v("你会看到多了三个元数据：")]),t._v(" "),s("p",[s("code",[t._v("design:type")]),t._v(" 是 "),s("code",[t._v("Function")]),t._v("，很明显，这个是描述装饰目标的元数据，这里装饰的是函数")]),t._v(" "),s("p",[s("code",[t._v("design:paramtypes")]),t._v(" 是 "),s("code",[t._v("[Number]")]),t._v("，很容易理解，就是参数的类型")]),t._v(" "),s("p",[s("code",[t._v("design:returntype")]),t._v(" 是 "),s("code",[t._v("String")]),t._v("，也很容易理解，就是返回值的类型")]),t._v(" "),s("p",[t._v("所以说，只要开启了这个编译选项，ts 生成的代码会自动添加一些元数据。")]),t._v(" "),s("p",[t._v("然后创建对象的时候就可以通过 "),s("code",[t._v("design:paramtypes")]),t._v(" 来拿到构造器参数的类型了，那不就知道怎么注入依赖了么？")]),t._v(" "),s("p",[t._v("所以，nest 源码里你会看到这样的代码：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/19/5G3WjAQOv8lyFJ6.png",alt:""}})]),t._v(" "),s("p",[t._v("就是获取构造器的参数类型的。这个常量就是我们上面说的那个：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/19/ip7nWRgMmQJSFXv.png",alt:""}})]),t._v(" "),s("p",[t._v("这也是为什么 "),s("code",[t._v("nest")]),t._v(" 会用 "),s("code",[t._v("ts")]),t._v(" 来写，因为它很依赖这个 "),s("code",[t._v("emitDecoratorMetadata")]),t._v(" 的编译选项。")]),t._v(" "),s("p",[t._v("你用 "),s("code",[t._v("cli")]),t._v(" 生成的代码模版里也都默认开启了这个编译选项：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/19/I4Sgl9qbHxPRNjs.png",alt:""}})]),t._v(" "),s("p",[t._v("这就是 "),s("code",[t._v("nest")]),t._v(" 的核心实现原理："),s("strong",[t._v("通过装饰器给 class 或者对象添加 "),s("code",[t._v("metadata")]),t._v("，并且开启 ts 的 "),s("code",[t._v("emitDecoratorMetadata")]),t._v(" 来自动添加类型相关的 "),s("code",[t._v("metadata")]),t._v("，然后运行的时候通过这些元数据来实现依赖的扫描，对象的创建等等功能。")])]),t._v(" "),s("h2",{attrs:{id:"setmetadata"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setmetadata"}},[t._v("#")]),t._v(" "),s("code",[t._v("@SetMetadata")])]),t._v(" "),s("p",[t._v("Nest 的装饰器都是依赖 "),s("code",[t._v("reflect-metadata")]),t._v(" 实现的，而且还提供了一个 "),s("code",[t._v("@SetMetadata")]),t._v(" 的装饰器让我们可以给 "),s("code",[t._v("class")]),t._v("、"),s("code",[t._v("method")]),t._v(" 添加一些 "),s("code",[t._v("metadata")]),t._v("：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/19/8cZyqtJbCsEfgAu.png",alt:""}})]),t._v(" "),s("p",[t._v("这个装饰器的底层实现自然是 "),s("code",[t._v("Reflect.defineMetadata")]),t._v("：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/19/ZjIChX9HK8O2x5s.png",alt:""}})]),t._v(" "),s("p",[t._v("Nest 为什么暴露这样一个底层的 "),s("code",[t._v("metadata api")]),t._v(" 出来呢？")]),t._v(" "),s("p",[t._v("因为这个 "),s("code",[t._v("metadata")]),t._v(" 是可以在代码里取出来用的：")]),t._v(" "),s("p",[t._v("我们创建新项目来测试下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("nest new metadata-and-reflector -p npm\n")])])]),s("p",[t._v("创建 guard 和 interceptor：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("nest g interceptor aaa --flat --no-spec\nnest g guard aaa --flat --no-spec\n")])])]),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/19/yLqpS2k1UxsnlFd.png",alt:""}})]),t._v(" "),s("p",[t._v("在路由级别应用：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/19/qBkj7F9QIDTO3oH.png",alt:""}})]),t._v(" "),s("p",[t._v("加个打印语句：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/19/UtkDxomZn2lG8KT.png",alt:""}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/19/H4oUwpsG5BT9Of8.png",alt:""}})]),t._v(" "),s("p",[t._v("然后 nest start --watch 把服务跑起来。")]),t._v(" "),s("p",[t._v("浏览器访问：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/19/KLUhrY6DM4Sca7Z.png",alt:""}})]),t._v(" "),s("p",[t._v("可以看到 guard 和 interceptor 成功执行了：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/19/hn51P9ldiJatoC6.png",alt:""}})]),t._v(" "),s("p",[t._v("然后我们用 "),s("code",[t._v("@SetMetadata")]),t._v(" 在 "),s("code",[t._v("controller")]),t._v(" 上加个 "),s("code",[t._v("metadata")]),t._v("：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/19/81w6fM9RSWdDIam.png",alt:""}})]),t._v(" "),s("p",[t._v("在 "),s("code",[t._v("guard")]),t._v(" 和 "),s("code",[t._v("interceptor")]),t._v(" 就就可以这样取出来：")]),t._v(" "),s("h2",{attrs:{id:"reflector"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reflector"}},[t._v("#")]),t._v(" reflector")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/19/XRSBmF8k4JQexAr.png",alt:""}})]),t._v(" "),s("p",[t._v("通过 "),s("code",[t._v("ExecutationContext")]),t._v(" 取到目标 "),s("code",[t._v("handler")]),t._v("，然后注入 "),s("code",[t._v("reflector")]),t._v("，通过 "),s("code",[t._v("reflector.ge")]),t._v("t 取出 "),s("code",[t._v("handler")]),t._v(" 上的 "),s("code",[t._v("metadata")]),t._v("。")]),t._v(" "),s("p",[s("code",[t._v("interceptor")]),t._v(" 里也是这样，这里换种属性注入方式：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/19/ckLPxCnF5JDlvwt.png",alt:""}})]),t._v(" "),s("p",[t._v("刷新下页面，就可以看到已经拿到了 "),s("code",[t._v("metadata")]),t._v("：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/19/uNm4ZBX2hrfMA1b.png",alt:""}})]),t._v(" "),s("p",[t._v("拿到 "),s("code",[t._v("metadata")]),t._v(" 有什么用呢？")]),t._v(" "),s("p",[t._v("可以判断权限呀，比如这个路由需要 "),s("code",[t._v("admin")]),t._v(" 角色，那可以取出 "),s("code",[t._v("request")]),t._v(" 的 "),s("code",[t._v("user")]),t._v(" 对象，看看它有没有这个角色，有才放行。")]),t._v(" "),s("p",[t._v("当然这只是一种用途。")]),t._v(" "),s("p",[t._v("除了能拿到 "),s("code",[t._v("handler")]),t._v(" 上的装饰器，也可以拿到 "),s("code",[t._v("class")]),t._v(" 上的：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/19/lVZ7qKsYESd2phc.png",alt:""}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/19/jfwEx3qX9k8vN2V.png",alt:""}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/19/c6xbo5gslQECi8h.png",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"reflector-的-4-个方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reflector-的-4-个方法"}},[t._v("#")]),t._v(" reflector 的 4 个方法")]),t._v(" "),s("p",[t._v("reflector 还有 3 个方法：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/19/COR42DmPlJdN9wu.png",alt:""}})]),t._v(" "),s("p",[t._v("这 4 个方法有啥区别呢？")]),t._v(" "),s("p",[t._v("看下"),s("a",{attrs:{href:"https://github.com/nestjs/nest/blob/5bba7e9d264319490f142ca5e8099c559fa7e7e3/packages/core/services/reflector.service.ts#L11-L97",target:"_blank",rel:"noopener noreferrer"}},[t._v("它们的源码"),s("OutboundLink")],1),t._v("就知道了：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/19/SEdJaFcZwyvCjK6.png",alt:""}})]),t._v(" "),s("p",[t._v("get 的实现就是 "),s("code",[t._v("Reflect.getMetadata")]),t._v("。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/19/ZXdEhUp8H92acJQ.png",alt:""}})]),t._v(" "),s("p",[s("code",[t._v("getAll")]),t._v(" 是返回一个 "),s("code",[t._v("metadata")]),t._v(" 的数组。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/19/Zsxl7IpdoGzhftv.png",alt:""}})]),t._v(" "),s("p",[s("code",[t._v("getAllAndMerge")]),t._v("，会把它们合并为一个对象或者数组。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/19/kdIFSXivpLYV4hW.png",alt:""}})]),t._v(" "),s("p",[s("code",[t._v("getAllAndOverride")]),t._v(" 会返回第一个非空的 "),s("code",[t._v("metadata")]),t._v("。")]),t._v(" "),s("p",[t._v("我们试一下：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/19/xlcp4T8MiHE9Y3v.png",alt:""}})]),t._v(" "),s("p",[t._v("可以看到它们结果的区别：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/19/qg8fbWupk4621cS.png",alt:""}})]),t._v(" "),s("p",[t._v("案例代码在"),s("a",{attrs:{href:"https://github.com/QuarkGluonPlasma/nestjs-course-code/tree/main/metadata-and-reflector",target:"_blank",rel:"noopener noreferrer"}},[t._v("小册仓库"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("p",[t._v("Nest 的装饰器的实现原理就是 "),s("code",[t._v("Reflect.getMetadata")]),t._v("、"),s("code",[t._v("Reflect.defineMetadata")]),t._v(" 这些 "),s("code",[t._v("api")]),t._v("。通过在 "),s("code",[t._v("class")]),t._v("、"),s("code",[t._v("method")]),t._v(" 上添加 "),s("code",[t._v("metadata")]),t._v("，然后扫描到它的时候取出 "),s("code",[t._v("metadata")]),t._v(" 来做相应的处理来完成各种功能。")]),t._v(" "),s("p",[s("code",[t._v("Nest")]),t._v(" 的 "),s("code",[t._v("Controller")]),t._v("、"),s("code",[t._v("Module")]),t._v("、"),s("code",[t._v("Service")]),t._v(" 等等所有的装饰器都是通过 "),s("code",[t._v("Reflect.meatdata")]),t._v(" 给类或对象添加元数据的，然后初始化的时候取出来做依赖的扫描，实例化后放到 "),s("code",[t._v("IOC")]),t._v(" 容器里。")]),t._v(" "),s("p",[t._v("实例化对象还需要构造器参数的类型，这个开启 "),s("code",[t._v("ts")]),t._v(" 的 "),s("code",[t._v("emitDecoratorMetadata")]),t._v(" 的编译选项之后， "),s("code",[t._v("ts")]),t._v(" 就会自动添加一些元数据，也就是 "),s("code",[t._v("design:type")]),t._v("、"),s("code",[t._v("design:paramtypes")]),t._v("、"),s("code",[t._v("design:returntype")]),t._v(" 这三个，分别代表被装饰的目标的类型、参数的类型、返回值的类型。")]),t._v(" "),s("p",[t._v("当然，"),s("code",[t._v("reflect metadata")]),t._v(" 的 "),s("code",[t._v("api")]),t._v(" 还在草案阶段，需要引入 "),s("code",[t._v("reflect metadata")]),t._v(" 的包做 "),s("code",[t._v("polyfill")]),t._v("。")]),t._v(" "),s("p",[t._v("Nest 还提供了 "),s("code",[t._v("@SetMetadata")]),t._v(" 的装饰器，可以在 "),s("code",[t._v("controller")]),t._v(" 的 "),s("code",[t._v("class")]),t._v(" 和 "),s("code",[t._v("method")]),t._v(" 上添加 "),s("code",[t._v("metadata")]),t._v("，然后在 "),s("code",[t._v("interceptor")]),t._v(" 和 "),s("code",[t._v("guard")]),t._v(" 里通过 "),s("code",[t._v("reflector")]),t._v(" 的 "),s("code",[t._v("api")]),t._v(" 取出来。")]),t._v(" "),s("p",[t._v("理解了 "),s("code",[t._v("metadata")]),t._v("，"),s("code",[t._v("nest")]),t._v(" 的实现原理就很容易搞懂了。")])])}),[],!1,null,null,null);s.default=e.exports}}]);