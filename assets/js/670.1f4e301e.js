(window.webpackJsonp=window.webpackJsonp||[]).push([[670],{1044:function(t,a,s){"use strict";s.r(a);var e=s(5),v=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"实现拖拽"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现拖拽"}},[t._v("#")]),t._v(" 实现拖拽")]),t._v(" "),a("p",[t._v("拖拽是该项目实现的关键，在这里我们使用的拖拽库是  vue3-dnd。")]),t._v(" "),a("h2",{attrs:{id:"vue3-dnd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue3-dnd"}},[t._v("#")]),t._v(" vue3-dnd")]),t._v(" "),a("p",[a("code",[t._v("vue3-dnd")]),t._v("是基于 "),a("code",[t._v("react-dnd")]),t._v("开发的 ，它们两个语法 API 几乎一致，用过 "),a("code",[t._v("react-dnd")]),t._v(" 的同学使用 "),a("code",[t._v("vue3-dnd")]),t._v(" 几乎是无缝衔接。")]),t._v(" "),a("p",[t._v("后面的内容不会介绍 "),a("code",[t._v("vue3-dnd")]),t._v(" 具体 "),a("code",[t._v("API")]),t._v(" 的使用，只会介绍 "),a("code",[t._v("vue3-dnd")]),t._v(" 在项目中的应用；")]),t._v(" "),a("p",[t._v("对 "),a("code",[t._v("vue-dnd")]),t._v(" 或者 "),a("code",[t._v("react-dnd")]),t._v(" 不熟悉的同学建议先查阅此文档 "),a("a",{attrs:{href:"https://hcg1023.github.io/vue3-dnd/example/",target:"_blank",rel:"noopener noreferrer"}},[t._v("示例"),a("OutboundLink")],1),t._v("，否则后面的内容会有点晦涩难懂；")]),t._v(" "),a("p",[t._v("具体的业务实现代码，就不在这写了，没有多大意义，下面只分享一下实现思路；")]),t._v(" "),a("h2",{attrs:{id:"usedrag"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usedrag"}},[t._v("#")]),t._v(" useDrag")]),t._v(" "),a("p",[a("code",[t._v("useDrag")]),t._v("函数提供了一种将你的组件作为"),a("strong",[t._v("拖拽源")]),t._v("连接到 DnD 的方法。")]),t._v(" "),a("h3",{attrs:{id:"forward、event、backward-拖动源"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#forward、event、backward-拖动源"}},[t._v("#")]),t._v(" "),a("strong",[t._v("Forward、Event、Backward 拖动源")])]),t._v(" "),a("p",[t._v("下面是一个 "),a("code",[t._v("event")]),t._v(" 事项在页面中的 "),a("code",[t._v("DOM")]),t._v(" 结构，可以看到，"),a("code",[t._v("class")]),t._v(" 为 "),a("code",[t._v("forward")]),t._v("、"),a("code",[t._v("content")]),t._v("、"),a("code",[t._v("backward")]),t._v(" 的 "),a("code",[t._v("section")]),t._v(" 都具有拖拽属性 "),a("code",[t._v("draggable")]),t._v("；"),a("img",{attrs:{src:"https://s2.loli.net/2023/03/15/sRruPxYn27BhIDo.png",alt:"img"}}),a("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2022/png/275583/1666138694209-63ae26c1-a128-4df3-b26c-834fdd03a21b.png",alt:"img"}})]),t._v(" "),a("p",[a("code",[t._v("forward")]),t._v("：将事项向左拖拽进行跨天，比如将 12号 单天的事项变为 11号 至 12号 两天的连贯事项")]),t._v(" "),a("p",[a("code",[t._v("content")]),t._v("：事项本身的拖拽（组件名称为 Event）")]),t._v(" "),a("p",[a("code",[t._v("backward")]),t._v("：将事项向右拖拽进行跨天，比如将 12号 单天的事项变为 12号 至 13号 两天的连贯事项")]),t._v(" "),a("h4",{attrs:{id:"拖动的事件处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#拖动的事件处理"}},[t._v("#")]),t._v(" "),a("strong",[t._v("拖动的事件处理")])]),t._v(" "),a("p",[t._v("这三个拖动源在拖动结束时去更改一个当前事项的 startTime 和 endTime。")]),t._v(" "),a("h3",{attrs:{id:"new-拖动源"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#new-拖动源"}},[t._v("#")]),t._v(" New 拖动源")]),t._v(" "),a("p",[t._v("当前日期中无事项时，可以通过拖拽空白处，创建新的事项。\n"),a("img",{attrs:{src:"https://s2.loli.net/2023/03/15/yRuW3bpq8Y4wjnC.png",alt:"image.png"}})]),t._v(" "),a("h3",{attrs:{id:"day-拖动源"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#day-拖动源"}},[t._v("#")]),t._v(" Day 拖动源")]),t._v(" "),a("p",[t._v("Day 组件很特殊，因为它本身即是拖动源又是放置目标。\n"),a("img",{attrs:{src:"https://s2.loli.net/2023/03/15/ej4Tfw2oiaktZIY.png",alt:"image.png"}})]),t._v(" "),a("p",[t._v("当其作为拖动源时，功能和 New 拖动源功能一致。")]),t._v(" "),a("h2",{attrs:{id:"usedrap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usedrap"}},[t._v("#")]),t._v(" useDrap")]),t._v(" "),a("p",[a("code",[t._v("useDrop")]),t._v("函数提供了一种将你的组件作为"),a("strong",[t._v("放置目标")]),t._v("连接到 DnD 的方法。")]),t._v(" "),a("h3",{attrs:{id:"day-放置源"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#day-放置源"}},[t._v("#")]),t._v(" Day 放置源")]),t._v(" "),a("p",[t._v("Day 放置源会接受来自其他拖动源的信息。\n"),a("img",{attrs:{src:"https://s2.loli.net/2023/03/15/57Ve3qxgoYMWlfh.png",alt:"image.png"}})]),t._v(" "),a("p",[t._v("Day 放置源暴露了两个属性，其可以使拖拽源在拖拽结束（end方法）时被获取。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("fullTime:放置源的日期。")])]),t._v(" "),a("li",[a("p",[t._v("dateIndex:放置源在当前日期面板中的索引。")])])]),t._v(" "),a("div",{staticClass:"language-ts line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("drop")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// drag 侧可以通过 monitor.getDropResult() 拿到该值")]),t._v("\n  dropTime"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" props"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dateInfo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fullTime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  dateIndex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" props"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dateInfo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dateIndex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("h4",{attrs:{id:"放置过程中的事件处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#放置过程中的事件处理"}},[t._v("#")]),t._v(" 放置过程中的事件处理")]),t._v(" "),a("p",[t._v("当有拖拽组件经过时，该组件就会触发 hover 事件，并改变样式。")]),t._v(" "),a("h1",{attrs:{id:"事件的渲染"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件的渲染"}},[t._v("#")]),t._v(" 事件的渲染")]),t._v(" "),a("h2",{attrs:{id:"获取当月的所有事项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#获取当月的所有事项"}},[t._v("#")]),t._v(" 获取当月的所有事项")]),t._v(" "),a("p",[t._v("单个事件的携带信息：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("字段")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("startTime")]),t._v(" "),a("td",[t._v("事项的开始时间")])]),t._v(" "),a("tr",[a("td",[t._v("endTime")]),t._v(" "),a("td",[t._v("事项的结束时间")])]),t._v(" "),a("tr",[a("td",[t._v("isDone")]),t._v(" "),a("td",[t._v("事项是否已完成")])]),t._v(" "),a("tr",[a("td",[t._v("priority")]),t._v(" "),a("td",[t._v("事项的重要程度")])]),t._v(" "),a("tr",[a("td",[t._v("title")]),t._v(" "),a("td",[t._v("事项标题")])]),t._v(" "),a("tr",[a("td",[t._v("description")]),t._v(" "),a("td",[t._v("事项的描述信息")])])])]),t._v(" "),a("h2",{attrs:{id:"将事项派发到每一天"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#将事项派发到每一天"}},[t._v("#")]),t._v(" 将事项派发到每一天")]),t._v(" "),a("p",[t._v("获取到当月所有的事项后，通过 getRenderEventList 函数与当月的日历进行处理后返回一个 renderList 列表。")]),t._v(" "),a("div",{staticClass:"language-ts line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("watchEffect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" renderList "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getRenderEventList")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    calendarInfo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    eventList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  renderEventList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" renderList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[t._v("经过处理后返回的是一个长度为 42 的二维数组，一个数组代表一天的数据，而在这个数组内又有内层数组，内层数组中存放着每一个具体的事项。\n"),a("img",{attrs:{src:"https://s2.loli.net/2023/03/15/qJrCDH8j5vlRnE4.png",alt:"image.png"}})]),t._v(" "),a("h2",{attrs:{id:"事项分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事项分类"}},[t._v("#")]),t._v(" 事项分类")]),t._v(" "),a("p",[t._v("经过处理后的 renderList 中，事项可以分为两大类，当天事项和跨天事项。")]),t._v(" "),a("h3",{attrs:{id:"单天事项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单天事项"}},[t._v("#")]),t._v(" 单天事项")]),t._v(" "),a("p",[t._v("如果 "),a("code",[t._v("startTime")]),t._v(" 和 "),a("code",[t._v("endTime")]),t._v(" 是同一天，那么代表该事项只在当天展示；\n"),a("img",{attrs:{src:"https://s2.loli.net/2023/03/15/H7UyFsbTQX9fI1w.png",alt:"image.png"}})]),t._v(" "),a("h3",{attrs:{id:"跨天事项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#跨天事项"}},[t._v("#")]),t._v(" 跨天事项")]),t._v(" "),a("p",[t._v("如果 "),a("code",[t._v("startTime")]),t._v(" 和 "),a("code",[t._v("endTime")]),t._v(" 不一样，那么代表该事项是跨天事项。\n"),a("img",{attrs:{src:"https://s2.loli.net/2023/09/05/xIjsaybpM6Q2KoJ.png",alt:"image.png"}})]),t._v(" "),a("h3",{attrs:{id:"haslast-和-hasnext-标识的作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#haslast-和-hasnext-标识的作用"}},[t._v("#")]),t._v(" hasLast 和 hasNext 标识的作用")]),t._v(" "),a("p",[a("code",[t._v("hasLast")]),t._v(" 和 "),a("code",[t._v("hasNext")]),t._v(" 的 标识符控制着 "),a("code",[t._v("Forward")]),t._v(" 组件和 "),a("code",[t._v("Backward")]),t._v(" 组件是否展示，我们在上文提到过，"),a("code",[t._v("Forward")]),t._v(" 组件 和 "),a("code",[t._v("Backward")]),t._v(" 组件都是拖动源，它的存在与否其实就代表着这个事项是否可以进行跨天拖拽。")]),t._v(" "),a("p",[a("strong",[t._v("我们以 12号这天的事项举例")])]),t._v(" "),a("p",[t._v("如果 "),a("code",[t._v("hasLast")]),t._v(" 为 "),a("code",[t._v("false")]),t._v("，那么渲染 "),a("code",[t._v("Forward")]),t._v(" 组件，事项可以向左进行跨天拖拽")]),t._v(" "),a("p",[t._v("如果 "),a("code",[t._v("hasNext")]),t._v(" 为 "),a("code",[t._v("true")]),t._v("，那么不渲染 "),a("code",[t._v("Backward")]),t._v(" 组件，同时，事项还需要将右侧的留白位置进行样式填充")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://s2.loli.net/2023/03/15/Kvd8imjQxrRF5h2.png",alt:"img"}}),a("img",{attrs:{src:"https://s2.loli.net/2023/03/15/vzZMfxomIkgX9CJ.png",alt:"img"}})]),t._v(" "),a("h2",{attrs:{id:"事项的渲染位置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事项的渲染位置"}},[t._v("#")]),t._v(" 事项的渲染位置")]),t._v(" "),a("p",[t._v("在经过数据处理后，有一个字段 "),a("code",[t._v("_index")]),t._v("，这个字段帮助我们定位渲染的初始位置。")]),t._v(" "),a("p",[t._v("我们以 11号 标题为 “举个例子” 这个事项为例，在 11号这天，它的渲染位置是第 2 个，那么如何保证后面的 12 号 至 15号，它的渲染位置一直是第 2 个呢？通过 "),a("code",[t._v("_index")]),t._v(" 字段确认。\n"),a("img",{attrs:{src:"https://s2.loli.net/2023/03/15/qBLM6cQDb7eNyr9.png",alt:"img"}})]),t._v(" "),a("p",[a("strong",[t._v("接收的参数：")])]),t._v(" "),a("p",[a("code",[t._v("dateIndex")]),t._v("：日历每天的日期索引，0 开始，41结束，总共 42 天")]),t._v(" "),a("p",[a("code",[t._v("lastEventList")]),t._v("：日历中每天的 "),a("code",[t._v("hasNext")]),t._v(" 属性为 true 的事项")]),t._v(" "),a("p",[a("code",[t._v("eventAllList")]),t._v("：当天的需要展示的所有事项")]),t._v(" "),a("p",[a("strong",[t._v("实现思路：")])]),t._v(" "),a("p",[t._v("1.根据 "),a("code",[t._v("dateIndex")]),t._v(" 获取前一天的所有 "),a("code",[t._v("hasNext")]),t._v(" 属性的事项，并赋值给变量 "),a("code",[t._v("lastEvents")]),t._v("。")]),t._v(" "),a("p",[t._v("2.声明 "),a("code",[t._v("showEventList")]),t._v(" ，存放当天最终需要渲染的事项。")]),t._v(" "),a("p",[t._v("3.将 "),a("code",[t._v("lastEvents")]),t._v(" 和 当天的所有的事项根据 "),a("code",[t._v("eventId")]),t._v(" 进行对比：\na.如果 "),a("code",[t._v("eventId")]),t._v(" 相等，那么代表该事项是跨天事项（因为前一天和当天的事项列表中都存在该事项）。\nb.将前一天的 "),a("code",[t._v("_index")]),t._v(" 赋值给当天的 "),a("code",[t._v("_index")]),t._v("，由此便确认了位置信息。\nc.通过 "),a("code",[t._v("showEventList[_index]")]),t._v(" 进行保存。")]),t._v(" "),a("p",[t._v("4.处理当天和以当天为开始日期的跨天事项，并赋值 "),a("code",[t._v("_index")]),t._v("。")]),t._v(" "),a("p",[t._v("5.在后续的展示过程中，就可以通过 "),a("code",[t._v("_index")]),t._v(" 进行排序，由此确认事项的渲染位置\n"),a("img",{attrs:{src:"https://s2.loli.net/2023/03/15/ulqKUBxFIOC9bJr.png",alt:"image.png"}}),a("img",{attrs:{src:"https://s2.loli.net/2023/03/15/ui5WfcbgX1tY8eM.png",alt:"image.png"}})])])}),[],!1,null,null,null);a.default=v.exports}}]);