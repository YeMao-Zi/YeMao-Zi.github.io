(window.webpackJsonp=window.webpackJsonp||[]).push([[324],{698:function(t,s,a){"use strict";a.r(s);var p=a(5),e=Object(p.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("Pipe 是在参数传给 handler 之前对参数做一些验证和转换的 class，")]),t._v(" "),s("p",[t._v("对应的源码如下：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/25/6gTvax18pGy49iu.png",alt:""}})]),t._v(" "),s("p",[t._v("对每个参数都会应用 pipe：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/25/U3rJAjMvVgDnF5e.png",alt:""}})]),t._v(" "),s("h2",{attrs:{id:"内置-pipe"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内置-pipe"}},[t._v("#")]),t._v(" 内置 Pipe")]),t._v(" "),s("p",[t._v("内置的 Pipe 有这些：")]),t._v(" "),s("ul",[s("li",[t._v("ValidationPipe")]),t._v(" "),s("li",[t._v("ParseIntPipe")]),t._v(" "),s("li",[t._v("ParseBoolPipe")]),t._v(" "),s("li",[t._v("ParseArrayPipe")]),t._v(" "),s("li",[t._v("ParseUUIDPipe")]),t._v(" "),s("li",[t._v("DefaultValuePipe")]),t._v(" "),s("li",[t._v("ParseEnumPipe")]),t._v(" "),s("li",[t._v("ParseFloatPipe")]),t._v(" "),s("li",[t._v("ParseFilePipe")])]),t._v(" "),s("p",[t._v("它们都实现了 PipeTransform 接口：")]),t._v(" "),s("p",[t._v("比如 ParseIntPipe 的源码是这样的：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/25/FcYhnTGdQyK9mot.png",alt:""}})]),t._v(" "),s("p",[t._v("我们分别来试下内置的 Pipe 的功能吧。")]),t._v(" "),s("p",[t._v("创建个项目：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("nest new pipe-test -p npm\n")])])]),s("p",[t._v("参数默认是 string 类型：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/25/7WmjgkpHMPUhvIZ.png",alt:""}})]),t._v(" "),s("h2",{attrs:{id:"将参数转化为整数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#将参数转化为整数"}},[t._v("#")]),t._v(" 将参数转化为整数")]),t._v(" "),s("p",[t._v("我们可以通过 Pipe 把它转为整数：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/25/Pp5fJ8seMv1HN6R.png",alt:""}})]),t._v(" "),s("p",[t._v("效果如下：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/25/QUvERnbKhXtsT4V.png",alt:""}})]),t._v(" "),s("p",[t._v("当你传入的参数不能 parse 为 int 时，会返回这样的响应：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/25/szENo1gheMHvVpJ.png",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"处理异常"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#处理异常"}},[t._v("#")]),t._v(" 处理异常")]),t._v(" "),s("p",[t._v("这个也是可以修改的，但要使用 new XxxPipe 的方式：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/25/SzJarHeW8pNXbyT.png",alt:""}})]),t._v(" "),s("p",[t._v("比如我指定错误时的状态码为 404。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/25/cyoMNbVXngWuz24.png",alt:""}})]),t._v(" "),s("p",[t._v("就会返回这样的响应。")]),t._v(" "),s("h3",{attrs:{id:"抛出异常并使用-exception-filter-处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#抛出异常并使用-exception-filter-处理"}},[t._v("#")]),t._v(" 抛出异常并使用 exception filter 处理")]),t._v(" "),s("p",[t._v("此外，你还可以自己抛一个异常出来，然后让 exception filter 处理：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/25/6jzAZb4O2sl5qID.png",alt:""}})]),t._v(" "),s("p",[t._v("可以看到，状态码和 message 都改了：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/25/ifgIm7dMPEncOpk.png",alt:""}})]),t._v(" "),s("p",[t._v("你也可以加个 @UseFilters 来使用自己的 exception filter 处理。")]),t._v(" "),s("h2",{attrs:{id:"将参数转化为-float-类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#将参数转化为-float-类型"}},[t._v("#")]),t._v(" 将参数转化为 float 类型")]),t._v(" "),s("p",[t._v("ParseFloatPipe 是把参数转换为 float 类型的。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/25/bSkOBNWhEKs8xeC.png",alt:""}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/25/8pik9j7vQEoKUFS.png",alt:""}})]),t._v(" "),s("p",[t._v("它也同样可以 new ParseFloatPipe 的形式，传入 errorHttpStatusCode 和 exceptionFactory。")]),t._v(" "),s("p",[t._v("剩下这些与 parse 有关的 pipe 我们都试一下：")]),t._v(" "),s("h2",{attrs:{id:"将参数转化为-boolean-类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#将参数转化为-boolean-类型"}},[t._v("#")]),t._v(" 将参数转化为 boolean 类型")]),t._v(" "),s("p",[t._v("ParseBoolPipe：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/25/1tAIU5FuosnldNq.png",alt:""}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/25/EbFAs4ohGdUX15S.png",alt:""}})]),t._v(" "),s("h2",{attrs:{id:"将参数转化为数组类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#将参数转化为数组类型"}},[t._v("#")]),t._v(" 将参数转化为数组类型")]),t._v(" "),s("p",[t._v("ParseArrayPipe：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/25/h93qipQkTZjKAyr.png",alt:""}})]),t._v(" "),s("p",[t._v("这时会提示需要 class-validator 这个包：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/25/zjZkwaJW74gtEFe.png",alt:""}})]),t._v(" "),s("p",[t._v("这是可以用装饰器和非装饰器两种方式对 class 属性做验证的库")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/25/rV6pieRXLcZOC1H.png",alt:""}})]),t._v(" "),s("p",[t._v("还会提示需要 class-transformer 这个包：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/25/GMLBiE9w3g8znQh.png",alt:""}})]),t._v(" "),s("p",[t._v("它是把普通对象转换为对应的 class 实例的包：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/25/f1xBDThuLboNFJz.png",alt:""}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/25/mQjS2TlR45goJnU.png",alt:""}})]),t._v(" "),s("p",[t._v("后面我们也会用到这俩包。")]),t._v(" "),s("p",[t._v("安装这俩包：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("npm install -D class-validator class-transformer\n")])])]),s("p",[t._v("然后访问下：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/25/LmcOlwh2XxzdAsS.png",alt:""}})]),t._v(" "),s("p",[t._v("你会发现它确实把每一项都提取出来了，但是没有转为 number。")]),t._v(" "),s("p",[t._v("这时候就需要用 new XxxPipe 的方式传入参数了：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/25/G6OE8IeBgzFixH3.png",alt:""}})]),t._v(" "),s("p",[t._v("指定 item 的类型。")]),t._v(" "),s("p",[t._v("这样就把数组每一项处理为 number 了。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/25/mzVpAQJq1ZohD6e.png",alt:""}})]),t._v(" "),s("p",[t._v("此外，你还可以指定分隔符：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/25/yT5COebgscJ6BAZ.png",alt:""}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/25/5k2QMH3io8vdWNI.png",alt:""}})]),t._v(" "),s("p",[t._v("当没有传参数的时候会报错：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/25/qdQRaCTwpmMgrn5.png",alt:""}})]),t._v(" "),s("p",[t._v("可以把它设置为 optional：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/25/AgoXzO9ljf46Lqd.png",alt:""}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/25/jszT2vkyfFVaemP.png",alt:""}})]),t._v(" "),s("h2",{attrs:{id:"限定枚举参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#限定枚举参数"}},[t._v("#")]),t._v(" 限定枚举参数")]),t._v(" "),s("p",[t._v("然后是 ParseEnumPipe：")]),t._v(" "),s("p",[t._v("假设我们有这样一个枚举：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/25/QarH54UsyYXTF1q.png",alt:""}})]),t._v(" "),s("p",[t._v("就可以用 ParseEnumPipe 来取：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/25/qvUmJ3AuIDMXKyt.png",alt:""}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/25/zP5shRN1bIcKB3U.png",alt:""}})]),t._v(" "),s("p",[t._v("有同学说，这不是多此一举么，本来 @Param 也能把它取出来呀。")]),t._v(" "),s("p",[t._v("ParseEnumPipe 还是有用的：")]),t._v(" "),s("p",[t._v("第一个是可以限制参数的取值范围：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/25/12wEpujWNBxKJhI.png",alt:""}})]),t._v(" "),s("p",[t._v("如果参数值不是枚举里的，就会报错。")]),t._v(" "),s("p",[t._v("这个错误自然也可以通过 errorHttpStatusCode 和 exceptionFactory 来定制。")]),t._v(" "),s("p",[t._v("第二个是帮你转换类型：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/25/rDJV4Xth1sdHoxF.png",alt:""}})]),t._v(" "),s("p",[t._v("这里拿到的就直接是枚举类型了，如果有个方法的参数是这样的枚举类型，就可以直接传入。")]),t._v(" "),s("h2",{attrs:{id:"校验参数是否为-uuid"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#校验参数是否为-uuid"}},[t._v("#")]),t._v(" 校验参数是否为 uuid")]),t._v(" "),s("p",[t._v("接下来是 ParseUUIDPipe：")]),t._v(" "),s("p",[t._v("UUID 是一种随机生成的几乎不可能重复的字符串，可以用来做 id。")]),t._v(" "),s("p",[t._v("它有 v3、v4、v5 3 个版本，我们用 uuid 包可以生成这种 id：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/25/4axFdXt8lUISwMY.png",alt:""}})]),t._v(" "),s("p",[t._v("在参数里，可以用 ParseUUIDPipe 来校验是否是 UUID：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/25/Plm1wNAbUxsdMt8.png",alt:""}})]),t._v(" "),s("p",[t._v("如果不是 uuid 会抛异常：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/25/EZuHmD2c6f1jWV4.png",alt:""}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/25/Lo6Hp2Z8WJ3xjwz.png",alt:""}})]),t._v(" "),s("h2",{attrs:{id:"设置默认参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设置默认参数"}},[t._v("#")]),t._v(" 设置默认参数")]),t._v(" "),s("p",[t._v("接下来是 DefaultValuePipe：")]),t._v(" "),s("p",[t._v("这个是设置参数默认值的：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/25/XS9UMAmDBONgIFJ.png",alt:""}})]),t._v(" "),s("p",[t._v("当你没传参数的时候，会使用默认值：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/25/sczaYQdBIf7Ub96.png",alt:""}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/25/IgWz4PCHY3UyXAq.png",alt:""}})]),t._v(" "),s("p",[t._v("它的源码也很简单：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/25/vJ8GNaui4X9ebOL.png",alt:""}})]),t._v(" "),s("p",[t._v("还剩下 ValidationPipe 和 ParseFilePipe，这个我们之后再讲。")]),t._v(" "),s("h2",{attrs:{id:"自定义-pipe"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自定义-pipe"}},[t._v("#")]),t._v(" 自定义 Pipe")]),t._v(" "),s("p",[t._v("接下来我们自己实现个 Pipe 试一下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("nest g pipe aaa --flat --no-spec\n")])])]),s("p",[t._v("生成一个 pipe，打印下参数值，返回 aaa：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/25/S2wQeyhGI9KpzEc.png",alt:""}})]),t._v(" "),s("p",[t._v("在 handler 里用下：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/25/uelDb8wyjqdIrNH.png",alt:""}})]),t._v(" "),s("p",[t._v("浏览器访问这个接口：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/25/UYdeLVzBNCIWlyt.png",alt:""}})]),t._v(" "),s("p",[t._v("返回的值是 aaaaaa，也就是说 pipe 的返回值就是传给 handler 的参数值。")]),t._v(" "),s("p",[t._v("打印的 value 就是 query、param 的值，而 metadata 里包含 type、metatype、data：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/25/1oaSGY5hCBFJ4Dw.png",alt:""}})]),t._v(" "),s("p",[t._v("type 就是 @Query、@Param、@Body 装饰器，或者自定义装饰器：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/25/C8o1BIhG6YxVMfu.png",alt:""}})]),t._v(" "),s("p",[t._v("而 metatype 是参数的 ts 类型：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/03/25/BXzqRWmAPSJ4hND.png",alt:""}})]),t._v(" "),s("p",[t._v("data 是传给 @Query、@Param、@Body 等装饰器的参数。")]),t._v(" "),s("p",[t._v("有了这些东西，做一下验证，抛出异常给 exception filter 处理，或者对 value 做些转换再传给 handler 就都是很简单的事情了。")]),t._v(" "),s("p",[t._v("案例代码在"),s("a",{attrs:{href:"https://github.com/QuarkGluonPlasma/nestjs-course-code/tree/main/pipe-test",target:"_blank",rel:"noopener noreferrer"}},[t._v("小册仓库"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("p",[t._v("Pipe 是在参数传给 handler 之前做一些验证和转换的，有 9 个内置的 Pipe 可以直接用。")]),t._v(" "),s("p",[t._v("我们过了一遍内置的 ParseIntPipe、ParseBoolPipe、ParseArrayPipe、ParseUUIDPipe、ParseEnumPipe、ParseFloatPipe 还有 DefaultValuePipe。")]),t._v(" "),s("p",[t._v("剩下的 ValidationPipe 和 ParseFilePipe 之后的章节讲。")]),t._v(" "),s("p",[t._v("自己写一个 pipe 也很简单，就是实现 PipeTransform 接口的 transform 方法，它的返回值就是传给 handler 的值。")]),t._v(" "),s("p",[t._v("在 pipe 里可以拿到装饰器和 handler 参数的各种信息，基于这些来实现校验和转换就是很简单的事情了。")])])}),[],!1,null,null,null);s.default=e.exports}}]);