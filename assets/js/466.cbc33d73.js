(window.webpackJsonp=window.webpackJsonp||[]).push([[466],{841:function(t,s,e){"use strict";e.r(s);var a=e(5),n=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h3",{attrs:{id:"pr五步走"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pr五步走"}},[t._v("#")]),t._v(" PR五步走")]),t._v(" "),s("p",[t._v("正如这个类比中提到的那样，在 GitHub 如果想要提交一个PR，大致分为一些几步：")]),t._v(" "),s("ol",[s("li",[t._v("先fork别人的项目到自己的仓库中去")]),t._v(" "),s("li",[t._v("clone到本地进行修改，由于是自己的仓库，所以想怎么改都行")]),t._v(" "),s("li",[t._v("再修改完bug后，push回自己的仓库")]),t._v(" "),s("li",[t._v("如果你觉得自己的修改很完备，那么你就可以Pull Request，相当于请作者看一下自己的修改。")]),t._v(" "),s("li",[t._v("最后如果作者也认同这个修改，那么他会Merge到master上，而你也就成了这个项目的contributor。")])]),t._v(" "),s("p",[t._v("光说不练假把式，相信点开这个教程的大部分人肯定现在正面对着如何提交PR，那么就和我一起来练练手吧！这里我使用GitHub上很火的一个"),s("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fclone95%2FVirgilio",target:"_blank",rel:"noopener noreferrer"}},[t._v("数据分析教程"),s("OutboundLink")],1),t._v("来做个演示。")]),t._v(" "),s("p",[t._v("第一步：fork项目到自己的仓库中")]),t._v(" "),s("p",[t._v("在项目名称右边有fork键，登陆后点击即可fork仓库。")]),t._v(" "),s("p",[t._v("fork过程中可以看到这么一个图片，完成后将会跳转到你自己的项目分支。")]),t._v(" "),s("p",[t._v("第二步：打开Git Bash或者命令行，将项目下载到本地")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/taotianli/Virgilio.git\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("你需要将"),s("code",[t._v("git clone")]),t._v("后的网址换成你自己的仓库，在看到done之后就代表这个仓库已经下载到了本地。")]),t._v(" "),s("p",[t._v("第三步：进入本地文件，并进行相应修改，这里以修改README.md作为演示。")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" Virgilio/\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" README.md\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Modefied the README.'")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("第四步：上传到自己的GitHub仓库，并申请Pull Request 上传代码使用"),s("code",[t._v("git push origin master")]),t._v("命令就可以了，在之后就可以申请PR了。")]),t._v(" "),s("p",[t._v("回到主项目分支上，同时点击"),s("code",[t._v("Pull Request -> New Pull Request")]),t._v("，最后如果原作者觉得这个修改可以被加到项目中去，那么他就会同意合并，最后图下图所示。 注意：在作者合并之前，你可以做多次修改，在申请PR后只要push回自己的仓库，GitHub会自动记录修改并同步。")]),t._v(" "),s("blockquote",[s("p",[t._v("总结：fork->clone->add＆push->PR->merged")])])])}),[],!1,null,null,null);s.default=n.exports}}]);