(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{412:function(t,a,s){"use strict";s.r(a);var n=s(5),e=function(t){t.options.__data__block__={mermaid_64a5709a:'graph TD\n    A[请求资源] --\x3e B{缓存中有副本?}\n    \n    B -- 否 --\x3e C[发送普通请求]\n    C --\x3e D[服务器返回响应]\n    D --\x3e E{检查响应缓存指令}\n    \n    E -- "A: 有明确缓存指令<br>Cache-Control: max-age=300 / Expires" --\x3e F[遵循明确指令进行缓存和过期计算]\n    F --\x3e Z[使用资源]\n    \n    E -- "B: 明确禁止缓存<br>Cache-Control: no-store" --\x3e G[不缓存响应]\n    G --\x3e Z\n    \n    E -- "C: 无明确指令但有验证器<br>（如 Last-Modified 或 ETag）" --\x3e H["触发启发式缓存计算<br>（例如：缓存时间 = Date - Last-Modified * 10%）"]\n    H --\x3e Z\n    \n    E -- "D: 无任何缓存头或验证器" --\x3e I[通常不进行缓存]\n    I --\x3e Z\n    \n    B -- 有 --\x3e J[缓存有效性检查]\n    J --\x3e K{"缓存是否有明确过期时间?<br>Cache-Control/Expires"}\n    \n    K -- 是 --\x3e L[按明确规则判断是否新鲜]\n    K -- 否 --\x3e M[使用之前启发式计算的缓存期判断]\n    \n    L --\x3e N[缓存是否新鲜?]\n    M --\x3e N\n    \n    N -- 是 --\x3e O["强缓存生效<br>直接从内存/磁盘加载"]\n    O --\x3e P[瞬间加载, 无网络请求]\n    P --\x3e Z\n    \n    N -- 否 --\x3e Q[缓存已过期, 需向服务器验证]\n    Q --\x3e R["发起条件请求（协商缓存）<br>请求头: If-None-Match (ETag)<br>和/或 If-Modified-Since"]\n    \n    R --\x3e S{服务器验证资源}\n    S -- "304 Not Modified<br>（未修改）" --\x3e T["更新缓存中的响应头<br>并重置新鲜度"]\n    T --\x3e U[使用缓存资源]\n    U --\x3e Z\n    \n    S -- "200 OK<br>（已修改）" --\x3e V[返回新内容]\n    V --\x3e W[更新缓存]\n    W --\x3e Z[使用资源]\n\n    Z[使用资源] --\x3e X(流程结束)\n'}},r=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"浏览器缓存机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器缓存机制"}},[t._v("#")]),t._v(" 浏览器缓存机制")]),t._v(" "),a("p",[t._v("浏览器缓存对于前端一点都不陌生，最常见的就是，新版本上线了，测试却说这怎么还没有变化呢？使用 ctr + F5 强制刷新之后，立马就好了。或者清除浏览器缓存，按住ctr+shift+delete，弹出如图：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://s2.loli.net/2024/08/23/rKt9YoDaAvCXn5F.png",alt:"前端性能优化(二)——浏览器缓存机制"}})]),t._v(" "),a("p",[t._v("我们会发现目前浏览器缓存的图片和文件的大小。或者进入chrome://chrome-urls/找到chrome://cache/ 就可以看到所有缓存的地址列表。对于浏览器缓存，前端对它是又爱又恨，有时想保留，有时想禁掉，所以看看浏览器缓存到底是怎样的？")]),t._v(" "),a("h2",{attrs:{id:"一、什么是浏览器缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、什么是浏览器缓存"}},[t._v("#")]),t._v(" 一、什么是浏览器缓存？")]),t._v(" "),a("p",[t._v("浏览器缓存就是浏览器根据 url 第一次访问网站之后，将网站的 html、css、js、图片等文件复制一份保留到浏览器中，当你二次访问这个 url 的网站时，如果网站没有明确表示有更新时，浏览器直接在缓存中查找内容，不会再次请求网页内容，只有网页明确表示有更新时，浏览器才会向服务器发起网路请求，再次下载网页。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://s2.loli.net/2024/08/23/2yRnQCYsEZ6M5NI.png",alt:"前端性能优化(二)——浏览器缓存机制"}})]),t._v(" "),a("p",[t._v("如上图，百度首页就是使用了缓存机制，首次访问之后 web资源被缓存，在后面重复请求中，资源直接在缓存中读取，而不是向服务器请求资源。")]),t._v(" "),a("h2",{attrs:{id:"二、为什么使用缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、为什么使用缓存"}},[t._v("#")]),t._v(" 二、为什么使用缓存？")]),t._v(" "),a("p",[a("strong",[t._v("2.1、为什么很多网站二次打开速度很快？")])]),t._v(" "),a("p",[t._v("网页二次打开很快，主要原因是第一次加载页面过程中，缓存了部分耗时数据，这一现象，对于单页面应用开发非常明显。")]),t._v(" "),a("p",[t._v("上一篇文章《浏览器工作原理》中，浏览器工作流程介绍，输入网址回车以后浏览器向服务器发起服务之前，会现在浏览器缓存中查询是否有需要的文件？如果有则直接在缓存中获取文件，避免向服务器请求和下载文件，所以节省了一部分时间。")]),t._v(" "),a("p",[a("strong",[t._v("2.2、浏览器缓存优点")])]),t._v(" "),a("p",[t._v("1、减少网络带宽消耗")]),t._v(" "),a("p",[t._v("对于网站运营者或者访问网页的用户，带宽就代表着 money ，过多的消耗带宽，我们服务器配置就得升级，使用浏览器缓存之后，就会减少网络流量，降低运营成本。")]),t._v(" "),a("p",[t._v("2、降低服务器压力")]),t._v(" "),a("p",[t._v("使用浏览器缓存之后，除第一次访问需要向服务器请求网站全部资源，后续访问可以重复使用浏览器本地缓存，减少对服务器的请求，间接降低服务器的压力，同时，搜索引擎的爬虫也会根据缓存过期机制降低抓取的频率，也可以降低服务器压力。")]),t._v(" "),a("p",[t._v("3、减少网络延迟，加快网页加载")]),t._v(" "),a("p",[t._v("浏览器缓存 web资源后，减少网络请求，可以更快速地获取到服务器返回数据，同时使用浏览器缓存内的文件比服务器获取快很多，所以网页加载速度明显快很多。")]),t._v(" "),a("h2",{attrs:{id:"三、浏览器的缓存规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、浏览器的缓存规则"}},[t._v("#")]),t._v(" 三、浏览器的缓存规则")]),t._v(" "),a("p",[t._v("浏览器的缓存判断分为"),a("strong",[t._v("强缓存")]),t._v("和"),a("strong",[t._v("协商缓存")]),t._v("以及"),a("strong",[t._v("启发式缓存")]),t._v("。")]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("强缓存")]),t._v(" "),a("p",[t._v("浏览器在加载资源时，会先根据本地缓存资源的 header 中的信息判断是否命中强缓存，如果命中则直接使用缓存中的资源不会再向服务器发送请求。")]),t._v(" "),a("p",[t._v("这里的 header 中的信息指的是 expires 和 cahe-control.")])]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("协商缓存")]),t._v(" "),a("p",[t._v("当强缓存没有命中的时候，"),a("strong",[t._v("浏览器会发送一个请求到服务器")]),t._v("，服务器根据 header 中的部分信息来判断是否命中缓存。如果命中，则返回 304 ，告诉浏览器资源未更新，可使用本地的缓存。")]),t._v(" "),a("p",[t._v("这里的 header 中的信息指的是 Last-Modify/If-Modify-Since 和 ETag/If-None-Match.")])]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("启发式缓存")]),t._v(" "),a("p",[t._v("当没有明确的缓存控制字段（Cache-Control 或 Expires）时，浏览器会根据 Last-Modified 和 Date 字段通过启发式算法计算出缓存时间并自动命中。")]),t._v(" "),a("p",[t._v("启发式缓存和强缓存以及协商缓存有很大的差别，它是一种浏览器的"),a("strong",[t._v("默认缓存策略")]),t._v("，并非基于HTTP协议的规范，因此不同的浏览器可能会有不同的实现方式。")])]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),a("p",[t._v("依赖启发式缓存是不明智的，因为它不可预测且可能因浏览器而异，所以"),a("strong",[t._v("最佳实践是始终为你的资源明确配置 Cache-Control 头部")]),t._v("。")]),t._v(" "),a("ul",[a("li",[t._v("对于不常变的文件："),a("code",[t._v("Cache-Control: max-age=31536000, immutable")]),t._v("（长缓存）")]),t._v(" "),a("li",[t._v("对于常变的文件："),a("code",[t._v("Cache-Control: no-cache")]),t._v(" 或 "),a("code",[t._v("Cache-Control: max-age=0")]),t._v("（配合 "),a("code",[t._v("Etag")]),t._v("/"),a("code",[t._v("Last-Modified")]),t._v(" 使用协商缓存）")]),t._v(" "),a("li",[t._v("彻底禁止缓存："),a("code",[t._v("Cache-Control: no-store")])])]),t._v(" "),a("p",[t._v("明确设置 "),a("code",[t._v("Cache-Control")]),t._v(" 可以消除不确定性，给你对缓存行为完全的控制权。"),a("code",[t._v("Last-Modified")]),t._v(" 则应作为一个有用的验证器，与 "),a("code",[t._v("Etag")]),t._v("（更可靠）一起配合 "),a("code",[t._v("Cache-Control")]),t._v(" 使用。")])]),t._v(" "),a("p",[a("strong",[t._v("流程图")])]),t._v(" "),a("p",[t._v("下图清晰地展示了浏览器的缓存决策过程：")]),t._v(" "),a("Mermaid",{attrs:{id:"mermaid_64a5709a",graph:t.$dataBlock.mermaid_64a5709a}}),a("p",[t._v("对于浏览器端的缓存来讲，这些规则是在 http 协议和 meta 标签中定义的。分别从两个维度：新鲜度和校验值，规定浏览器是否可以直接使用缓存中的副本，还是直接从服务器获取最新资源。")]),t._v(" "),a("p",[t._v("3.1、新鲜度(过期)：浏览器缓存的有效期，缓存必须满足以下两个条件，浏览器才会认为是最新的，可以直接使用。")]),t._v(" "),a("ul",[a("li",[t._v("含有完整的过期时间控制头信息，并在有效期内。")]),t._v(" "),a("li",[t._v("浏览器已经使用过这个副本，并且在会话中已经检查过新鲜度。")])]),t._v(" "),a("p",[t._v("3.2、校验值(验证)：服务器返回资源的时候，会在响应头信息中带上资源实体标签 Entity Tag，可以用来作为浏览器再次请求过程的校验标识，如果发现校验标识不匹配，说明资源已经被修改过或过期，浏览器需要重新请求资源。")]),t._v(" "),a("h2",{attrs:{id:"四、如何控制缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、如何控制缓存"}},[t._v("#")]),t._v(" 四、如何控制缓存？")]),t._v(" "),a("p",[t._v("缓存规则可以设置在html的meta标签，也可以设置在http协议头内。")]),t._v(" "),a("p",[t._v("4.1、前端 html 中 meta 标签")]),t._v(" "),a("p",[t._v("在 html 页面中加入缓存设置，代码如下：")]),t._v(" "),a("div",{staticClass:"language-xml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("meta")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("http-equiv")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("Pragma"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("content")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("no-cache"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- Pragma是http1.0版本中给客户端设定缓存方式之一 --\x3e")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("上边代码，禁止浏览器缓存，浏览器每次访问网页都要去服务器请求。事实这种禁用缓存形式作用有限：")]),t._v(" "),a("ul",[a("li",[t._v("只有IE浏览器才能标识这段 meta 的含义，其他主流浏览器仅认识 “Cache-Control:no-store” 的 meta 标签。")]),t._v(" "),a("li",[t._v("在IE浏览器中，并不一定添加 pragma，但是会让当前网页每次都会向服务器发送请求。")])]),t._v(" "),a("p",[t._v("4.2、HTTP协议头")]),t._v(" "),a("p",[t._v("http请求和响应头中，与缓存相关的常见类型：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("规则")]),t._v(" "),a("th",[t._v("消息报头")]),t._v(" "),a("th",[t._v("值/示例")]),t._v(" "),a("th",[t._v("类型")]),t._v(" "),a("th",[t._v("作用")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("新鲜度")]),t._v(" "),a("td",[t._v("Pragma")]),t._v(" "),a("td",[t._v("no-cache")]),t._v(" "),a("td",[t._v("响应")]),t._v(" "),a("td",[t._v("告诉浏览器忽略资源的缓存副本，每次访问都需要去服务器拉取【http1.0中存在的字段，在http1.1已被抛弃，使用Cache-Control替代，但为了做http协议的向下兼容，很多网站依旧会带上这个字段】")])]),t._v(" "),a("tr",[a("td"),t._v(" "),a("td",[t._v("Expires")]),t._v(" "),a("td",[t._v("Mon, 15 Aug 2016 03:56:47 GMT")]),t._v(" "),a("td",[t._v("响应")]),t._v(" "),a("td",[t._v("启用缓存和定义缓存时间。告诉浏览器资源缓存过期时间，如果还没过该时间点则不发请求【http1.0中存在的字段，该字段所定义的缓存时间是相对服务器上的时间而言的，如果客户端上的时间跟服务器上的时间不一致（特别是用户修改了自己电脑的系统时间），那缓存时间可能就没啥意义了。在HTTP 1.1版开始，使用Cache-Control: max-age=秒替代】")])]),t._v(" "),a("tr",[a("td"),t._v(" "),a("td",[t._v("Cache-Control")]),t._v(" "),a("td",[t._v("no-cache")]),t._v(" "),a("td",[t._v("响应")]),t._v(" "),a("td",[t._v("告诉浏览器忽略资源的缓存副本，强制每次请求直接发送给服务器，拉取资源，但不是“不缓存”")])]),t._v(" "),a("tr",[a("td"),t._v(" "),a("td"),t._v(" "),a("td",[t._v("no-store")]),t._v(" "),a("td",[t._v("响应")]),t._v(" "),a("td",[t._v("强制缓存在任何情况下都不要保留任何副本")])]),t._v(" "),a("tr",[a("td"),t._v(" "),a("td"),t._v(" "),a("td",[t._v("max-age=[秒]")]),t._v(" "),a("td",[t._v("响应")]),t._v(" "),a("td",[t._v("指明缓存副本的有效时长，从请求时间开始到过期时间之间的秒数")])]),t._v(" "),a("tr",[a("td"),t._v(" "),a("td"),t._v(" "),a("td",[t._v("public")]),t._v(" "),a("td",[t._v("响应")]),t._v(" "),a("td",[t._v("任何路径的缓存者（本地缓存、代理服务器），可以无条件的缓存该资源")])]),t._v(" "),a("tr",[a("td"),t._v(" "),a("td"),t._v(" "),a("td",[t._v("private")]),t._v(" "),a("td",[t._v("响应")]),t._v(" "),a("td",[t._v("只针对单个用户或者实体（不同用户、窗口）缓存资源")])]),t._v(" "),a("tr",[a("td"),t._v(" "),a("td",[t._v("Last-Modified")]),t._v(" "),a("td",[t._v("Mon, 15 Aug 2016 03:56:47 GMT")]),t._v(" "),a("td",[t._v("响应")]),t._v(" "),a("td",[t._v("告诉浏览器这个资源最后的修改时间。服务器将资源传递给客户端时，会将资源最后更改的时间以“Last-Modified: GMT”的形式加在实体首部上一起返回给客户端【只能精确到秒级，如果某些文件在1秒钟以内，被修改多次的话，它将不能准确标注文件的修改时间】")])]),t._v(" "),a("tr",[a("td"),t._v(" "),a("td",[t._v("If-Modified-Since")]),t._v(" "),a("td",[t._v("Mon, 15 Aug 2016 03:56:47 GMT")]),t._v(" "),a("td",[t._v("请求")]),t._v(" "),a("td",[t._v("其值为上次响应头的Last-Modified值，再次向web服务器请求时带上头If-Modified-Since。web服务器收到请求后发现有头If-Modified-Since则与被请求资源的最后修改时间进行比对。若最后修改时间较新，说明资源又被改动过，则响应整片资源内容（写在响应消息包体内），包括更新Last-Modified的值，HTTP 200；若最后修改时间较旧，说明资源无新修改，则响应HTTP 304(无需请求，节省浏览)，告知浏览器继续使用所保存的cache")])]),t._v(" "),a("tr",[a("td",[t._v("校验值")]),t._v(" "),a("td",[t._v("ETag")]),t._v(" "),a("td",[t._v('"fd56273325a2114818df4f29a628226d"')]),t._v(" "),a("td",[t._v("响应")]),t._v(" "),a("td",[t._v("告诉浏览器当前资源在服务器的唯一标识符（生成规则由服务器决定）")])]),t._v(" "),a("tr",[a("td"),t._v(" "),a("td",[t._v("If-None-Match")]),t._v(" "),a("td",[t._v('"fd56273325a2114818df4f29a628226d"')]),t._v(" "),a("td",[t._v("请求")]),t._v(" "),a("td",[t._v("当资源过期时（使用Cache-Control标识的max-age），发现资源具有Etage声明，则再次向web服务器请求时带上头If-None-Match（Etag的值）。web服务器收到请求后发现有头If-None-Match则与被请求资源的相应校验串进行比对，决定返回200或304")])])])]),t._v(" "),a("p",[t._v("各种类型之间的关系和区别：")]),t._v(" "),a("ul",[a("li",[t._v("Cache-Control 与 Expires：它两作用一样，都表明当前资源的有效期，控制浏览器是取缓存还是直接向服务器获取，Cache-Control可以设置的更细致，如果同时设置，它的优先级高于Expires。")]),t._v(" "),a("li",[t._v("Last-Modified / ETag 与 Cache-Control / Expires：配置Last-Modified/ETag的情况下，浏览器再次访问URL的资源，还是会发送请求到服务器，询问文件是否已经修改，如果没有，服务器会给浏览器返回304，浏览器直接从本地缓存中取就好了，反之，服务器会直接向浏览器返回数据。Cache-Control / Expires 检测本地缓存是否还在有效期内，在有效期内，直接使用本地缓存，阻止发送请求。如果同时设置，Cache-Control / Expiress 优先级更高。一般情况下，两者配合使用，因为即使服务器设置缓存时间, 当用户点击“刷新”按钮时，浏览器会忽略缓存继续向服务器发送请求，这时Last-Modified/ETag将能够很好利用304，从而减少响应开销。")]),t._v(" "),a("li",[t._v("Last-Modified 与 ETag：ETag主要是为了解决Last-Modified比较难解决的问题：1、Last-Modified标注的最后修改只能精确到秒级，如果某些文件在1秒钟以内，被修改多次的话，它将不能准确标注文件的新鲜度。2、如果某些文件会被定期生成，当有时内容并没有任何变化，但Last-Modified却改变了，导致文件没法使用缓存。3、有可能存在服务器没有准确获取文件修改时间，或者与代理服务器时间不一致等情形。ETag是服务器自动生成或开发者生成对应资源在服务器的唯一标识符，能够更加精准控制缓存。两者可以一起使用，服务器优先验证ETag，一致时，才会继续比对Last-Mofifed，才决定是否要返回304。")])]),t._v(" "),a("h2",{attrs:{id:"五、不能缓存的请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#五、不能缓存的请求"}},[t._v("#")]),t._v(" 五、不能缓存的请求")]),t._v(" "),a("p",[t._v("并不是所有的请求都能被缓存，无法被缓存的有：")]),t._v(" "),a("ul",[a("li",[t._v("post 请求无法被缓存。")]),t._v(" "),a("li",[t._v("需要根据cookie、认证信息等决定输入内容的动态请求不能被缓存。")]),t._v(" "),a("li",[t._v("http响应头中不包含Last-Modified/ETag，也不包含Cache-Control/Expiress的请求无法被缓存。")]),t._v(" "),a("li",[t._v("http信息头明确设置Cache-Control:no-cache,pragma:no-cache或Cache-Control:max-age=0浏览器不缓存时。")])]),t._v(" "),a("h2",{attrs:{id:"六、对于缓存前端能做什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#六、对于缓存前端能做什么"}},[t._v("#")]),t._v(" 六、对于缓存前端能做什么")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("阶段")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("可做事项")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("目的")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("strong",[t._v("构建")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("资源指纹 (Hashing)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("实现精确缓存失效，性能基石")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("strong",[t._v("构建")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("代码分割 (Code Splitting)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("缩小缓存粒度，提升缓存利用率")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("strong",[t._v("配置")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("提供 "),a("code",[t._v(".htaccess")]),t._v(" / "),a("code",[t._v("_headers")]),t._v(" 文件")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("告知服务器/CDN如何设置缓存头")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("strong",[t._v("运行时")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("编写 Service Worker")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("实现离线化、高级缓存策略")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("strong",[t._v("运行时")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("缓存 API 数据")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("减少网络请求，提升用户体验")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("strong",[t._v("运行时")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("感知更新并提示用户")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("友好地引导用户获取新版本")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("strong",[t._v("调试")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("使用开发者工具验证")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("确保缓存策略按预期工作")])])])]),t._v(" "),a("p",[t._v("6.1、资源指纹")]),t._v(" "),a("p",[t._v("配置 Webpack/Vite/Rollup，使用 "),a("code",[t._v("[contenthash]")]),t._v(" 或 "),a("code",[t._v("[chunkhash]")]),t._v(" 作为输出文件名。")]),t._v(" "),a("p",[a("strong",[t._v("精确的缓存失效")]),t._v("：文件变化后重新打包，其 url 路径会添加新的 hash 值，从而触发重新下载，未变化的文件则永远从浏览器缓存读取。")]),t._v(" "),a("p",[t._v("6.2、代码分割")]),t._v(" "),a("p",[t._v("使用动态导入 "),a("code",[t._v("import('./module.js')")]),t._v(" 将代码拆分成多个按需加载的 chunk（页面级、组件级、第三方库）。")]),t._v(" "),a("p",[a("strong",[t._v("缩小缓存粒度")]),t._v("：修改一个页面模块，只会使该模块对应的 chunk 哈希变化，而不会影响其他页面和庞大的 "),a("code",[t._v("vendor")]),t._v(" (第三方库) chunk。极大提升了缓存利用率。")]),t._v(" "),a("p",[t._v("6.3、元配置")]),t._v(" "),a("ol",[a("li",[a("p",[a("strong",[t._v("配置 "),a("code",[t._v(".htaccess")]),t._v(" (Apache)")]),t._v("：前端项目可以包含这个文件来定义缓存规则。")]),t._v(" "),a("div",{staticClass:"language-apache line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<FilesMatch "\\.(html|htm)$">\n    Header set Cache-Control "no-cache"\n</FilesMatch>\n<FilesMatch "\\.(js|css|png|jpg|ico|svg|woff2)$">\n    Header set Cache-Control "max-age=31536000, immutable"\n</FilesMatch>\n')])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("配置 "),a("code",[t._v("_headers")]),t._v(" (Netlify等)")]),t._v("：许多现代部署平台支持通过项目中的 "),a("code",[t._v("_headers")]),t._v(" 文件设置响应头。")]),t._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("/*\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 首先设置默认的缓存策略，比如不缓存HTML")]),t._v("\nCache-Control: no-cache\n\n/assets/*\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 然后为assets目录下的文件覆盖为长缓存")]),t._v("\nCache-Control: public, max-age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("31536000")]),t._v(", immutable\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])])])]),t._v(" "),a("p",[t._v("6.4、Service Worker")]),t._v(" "),a("p",[t._v("编写SW脚本，监听 "),a("code",[t._v("fetch")]),t._v(" 事件，实现复杂的缓存策略（如"),a("strong",[t._v("缓存优先、网络优先、仅缓存等")]),t._v("）。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// service-worker.js 简化示例 (网络优先)")]),t._v("\nself"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fetch'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("respondWith")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fetch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 先尝试网络请求")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("response")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 网络请求成功，克隆并缓存响应")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" clone "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("clone")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        caches"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'my-cache'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("cache")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          cache"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" clone"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("catch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" caches"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. 网络失败，回退到缓存")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br")])]),a("p",[t._v("6.5、缓存 api")]),t._v(" "),a("p",[t._v("可以通过 swr 库或自己实现 localStorage 等方式缓存 api 。")]),t._v(" "),a("p",[t._v("6.6、感知更新并提示用户")]),t._v(" "),a("p",[t._v("在用户界面上友好地提示用户“有新版本可用，请刷新页面”，来提升用户体验。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 示例：每小時检查一次 index.html 是否更新")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setInterval")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fetch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/index.html'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("cache")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'no-cache'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("res")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("text")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("html")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" newVersion "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("extractVersionFromHTML")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 伪代码，从HTML中提取版本号")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newVersion "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" currentVersion"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("showUpdateNotification")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 显示更新提示弹窗")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])]),a("p",[t._v("6.7、使用开发者工具验证")]),t._v(" "),a("p",[t._v("作为开发者可以使用开发者工具验证缓存策略是否正确工作。")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("使用浏览器开发者工具")]),t._v("：\n"),a("ul",[a("li",[a("strong",[t._v("Network面板")]),t._v("：查看每个请求的"),a("code",[t._v("Size")]),t._v("列，如果显示 "),a("code",[t._v("(memory cache)")]),t._v(" 或 "),a("code",[t._v("(disk cache)")]),t._v("，则说明缓存命中。检查响应头中的 "),a("code",[t._v("Cache-Control")]),t._v(" 等字段是否正确。")]),t._v(" "),a("li",[a("strong",[t._v("Application面板")]),t._v("：查看 "),a("code",[t._v("Cache Storage")]),t._v(" 和 "),a("code",[t._v("Local Storage")]),t._v(" 中缓存的内容。")])])]),t._v(" "),a("li",[a("strong",[t._v("进行 Lighthouse / PageSpeed Insights 审计")]),t._v("：\n"),a("ul",[a("li",[t._v("这些工具会明确指出哪些资源缺少有效的缓存策略，并给出优化建议。")])])])])],1)}),[],!1,null,null,null);"function"==typeof e&&e(r);a.default=r.exports}}]);