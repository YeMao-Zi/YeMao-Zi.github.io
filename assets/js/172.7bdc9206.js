(window.webpackJsonp=window.webpackJsonp||[]).push([[172],{548:function(t,s,r){"use strict";r.r(s);var a=r(5),v=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"关于ssr"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关于ssr"}},[t._v("#")]),t._v(" 关于SSR")]),t._v(" "),s("p",[t._v("SSR 是 Server-Side Rendering，即服务端渲染的英文缩写。")]),t._v(" "),s("p",[t._v("SSR应用会在服务端直接渲染成 HTML 字符串，作为服务端响应返回给浏览器，最后在浏览器端将静态的 HTML“激活”(hydrate) 为能够交互的客户端应用。")]),t._v(" "),s("h2",{attrs:{id:"ssr优势"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ssr优势"}},[t._v("#")]),t._v(" SSR优势")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("更快的首屏加载")]),t._v("：服务端渲染的 HTML 无需等到所有的 JavaScript 都下载并执行完成之后才显示，所以用户将会更快地看到完整渲染的页面。且数据获取过程在首次访问时在服务端完成。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("统一的心智模型")]),t._v("：可以使用相同的语言以及相同的声明式、面向组件的心智模型来开发整个应用，而不需要在后端模板系统和前端框架之间来回切换。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("更好的 SEO")]),t._v("：搜索引擎爬虫可以直接看到完全渲染的页面。")])])]),t._v(" "),s("h2",{attrs:{id:"局限性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#局限性"}},[t._v("#")]),t._v(" 局限性")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("浏览器端特定的代码只能在某些生命周期钩子中使用；一些外部库可能需要特殊处理才能在服务端渲染的应用中运行。")])]),t._v(" "),s("li",[s("p",[t._v("更多的与构建配置和部署相关的要求。服务端渲染的应用需要一个能让 Node.js 服务器运行的环境，不像完全静态的 SPA 那样可以部署在任意的静态文件服务器上。")])]),t._v(" "),s("li",[s("p",[t._v("更高的服务端负载。在 Node.js 中渲染一个完整的应用要比仅仅托管静态文件更加占用 CPU 资源，因此如果你预期有高流量，请为相应的服务器负载做好准备，并采用合理的缓存策略。")])])])])}),[],!1,null,null,null);s.default=v.exports}}]);