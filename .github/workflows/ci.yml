# on: # 触发条件
#   # 每当 push 到 master 分支时触发部署
#   push:
#     branches:
#       [master]

# jobs:
#   docs:
#     runs-on: ubuntu-latest # 指定运行所需要的虚拟机环境（必填）

#     steps:
#       - uses: actions/checkout@v2
#         with:
#           # “最近更新时间” 等 git 日志相关信息，需要拉取全部提交记录
#           fetch-depth: 0

#       - name: Setup Node.js
#         uses: actions/setup-node@v1
#         with:
#           # 选择要使用的 node 版本
#           node-version: "14"

#       # 缓存 node_modules
#       - name: Cache dependencies
#         uses: actions/cache@v2
#         id: yarn-cache
#         with:
#           path: |
#             **/node_modules
#           key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
#           restore-keys: |
#             ${{ runner.os }}-yarn-

#       # 如果缓存没有命中，安装依赖
#       - name: Install dependencies
#         if: steps.yarn-cache.outputs.cache-hit != 'true'
#         run: yarn --frozen-lockfile

#       # 运行构建脚本
#       - name: Build VuePress site
#         run: yarn build

#       # 查看 workflow 的文档来获取更多信息
#       # @see https://github.com/crazy-max/ghaction-github-pages
#       - name: Deploy to GitHub Pages
#         uses:  crazy-max/ghaction-github-pages@v2
#         # 环境变量
#         env:
#           GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
#         with:
#           # 部署到 gh-pages 分支
#           target_branch: gh-pages
#           # 部署目录为 VuePress 的默认输出目录
#           build_dir: docs/.vuepress/dist

name: CI

on:
  push:
    branches:
      - master

env:
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20]

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Build-and-deploy
        run: |
          remote_addr=`git remote get-url --push origin`
          commit_info=`git describe --all --always --long`
          user_name=`git log -1 --pretty=format:'%an'`
          user_email=`git log-1 --pretty=format:'%ae'`
          deploy_branch=gh-pages
          export NODE_OPTIONS=--max_old_space_size=8192
          pnpm build
          cd docs/.vuepress/dist
          git config --global init.defaultBranch $deploy_branch
          git init
          git config user.name ${user_name}
          git config user.email ${user_email}
          git add -A
          git commit -m "auto deploy, $commit_info"
          remote_addr=`echo $remote_addr | awk -F'://' '{print $2}'`
          remote_addr=https://${user_name}:${{secrets.ACCESS_TOKEN}}@${remote_addr}
          git remote add origin ${remote_addr}
          git push origin HEAD:$deploy_branch --force
      # 只提交到github pages也可以使用github-pages-deploy-action，详见: https://github.com/JamesIves/github-pages-deploy-action
